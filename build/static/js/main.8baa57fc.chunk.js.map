{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Button/Button.module.css","components/Burger/BuildControls/BuildControls.module.css","containers/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToogle/DrawerToogle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Order/Order.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.module.css","containers/Auth/Auth.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Burger/Burger.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToogle/DrawerToogle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Auth/Logout/Logout.js","components/Order/Order.js","components/UI/Spinner/Spinner.js","components/UI/Modal/Modal.js","containers/hoc/withErrorHandler/withErrorHandler.js","containers/Orders/Orders.js","store/actions/order.js","shared/utility.js","components/UI/Button/Button.js","components/UI/Input/Input.js","containers/Auth/Auth.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","Logo","height","className","classes","style","src","burgerLogo","alt","NavigationItem","children","link","exact","to","activeClassName","active","NavigationItems","isAuth","DrawerToogle","cliked","onClick","DrawerToggle","Toolbar","toogle","DesktopOnly","Backdrop","show","clicked","SideDrawer","close","open","attachedClasses","push","Open","Close","join","Layout","state","showSideDrawer","sideDrawerCloseHandler","setState","sideDrawerToogleHandler","prevState","this","props","isAuthenticated","Content","Component","connect","auth","token","instance","axios","create","baseURL","authSuccess","userId","type","authFailed","error","logout","localStorage","removeItem","checkAuthTimeOut","expirationTime","dispatch","setTimeout","setRedirectPath","path","Logout","onLogout","Order","ingredients","price","transformedIngredients","ingredientName","name","amount","ingredientsOutput","map","ingredient","textTransform","display","margin","border","padding","key","Number","parseFloat","toFixed","Spinner","Loader","Modal","modalClose","transform","opacity","withErrorHandler","WrappedComponent","errorConfirmHandler","reqInterceptor","interceptors","response","use","req","resInterceptor","res","request","eject","message","Orders","onFetchOrders","loading","orders","order","id","queryParams","get","then","fetchOrders","data","catch","e","updateObject","oldObject","newObject","checkValidation","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","Button","disabled","Input","elementType","elementConfig","label","changed","invalid","shouldValidate","touched","autocomplete","inputElement","inputCLasses","InputElement","validationError","Invalid","ValidationError","onChange","autoComplete","options","option","labelElemtn","Auth","controls","email","placeholder","validation","valid","password","isSignup","inputChangeHandler","event","controlName","updatedControls","target","submitHandler","preventDefault","onAuth","switchAuthModeHandler","building","redirectPath","onSetRedirectPath","formElements","config","form","formElement","errorMessage","authRedirect","onSubmit","isLoading","burgerBuilder","authData","returnSecureToken","url","post","resp","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","BurgerIngredient","BreadBottom","BreadTop","Seed1","Seed2","Meat","Cheese","Bacon","Salad","Burger","Object","keys","Array","_","i","reduce","arr","el","concat","CheckoutSummary","checkoutCancel","checkoutContinue","width","ContactData","orderForm","street","zipCode","country","deleveryMethod","formIsValid","orderHandler","formData","formElementIdentifier","totalPrice","orderData","onOrderBurger","inputIdentifier","updatedFormElement","updatedOrderForm","inpuIdentifiers","purchaseBurgerSuccess","purchaseBurger","Checkout","checkoutCancelHandler","history","goBack","checkoutContinueHandler","replace","summary","purchaseRedirect","purchased","match","component","BuildControl","add","remove","Label","Less","More","BuildControls","ingredientAdded","ingredientRemoved","purchasable","ordered","control","OrderButton","OrderSummary","purchaseCancel","purchaseContinue","ingredientsSummary","BurgerBuilder","pusrchasing","updatePurchaseState","sum","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","getIngredients","disableInfo","orderSummary","burger","onIngredientAdded","onIngredientRemoved","addIngredient","removeIngredient","App","onTryAutoSignUp","routes","route","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","reducer","newOrder","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,sBCAxUD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,2B,gBCAvID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,uBAAuB,gBAAkB,iC,gBCA1KD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,mBCAjJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,iBCAhGD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,mBCAnFD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,gBCA7FD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,0BCAjID,EAAOC,QAAU,CAAC,QAAU,0B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,iBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,iBCA7BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,gBCA3DD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,uQCW1DC,EARF,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACX,OACI,yBAAKC,UAAWC,IAAQH,KAAMI,MAAO,CAACH,OAAQA,IAC1C,yBAAKI,IAAKC,IAAYC,IAAI,kB,yBCMvBC,EATQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,MAAlB,OACnB,wBAAIT,UAAWC,IAAQK,gBACnB,kBAAC,IAAD,CACII,GAAIF,EACJC,MAAOA,EACPE,gBAAiBV,IAAQW,QAASL,K,iBCM/BM,EAXS,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OACpB,wBAAId,UAAWC,IAAQY,iBACnB,kBAAC,EAAD,CAAgBL,KAAK,IAAIC,OAAK,GAA9B,kBACCK,EAAS,kBAAC,EAAD,CAAgBN,KAAK,WAArB,UAAyD,KAClEM,EACG,kBAAC,EAAD,CAAgBN,KAAK,WAArB,UACA,kBAAC,EAAD,CAAgBA,KAAK,SAArB,kB,iBCGGO,EAVM,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnB,OACI,yBAAKC,QAASD,EAAQhB,UAAWC,IAAQiB,cACrC,8BACA,8BACA,gCCYGC,EAdC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAQN,EAAY,EAAZA,OACtB,OACI,4BAAQd,UAAWC,IAAQkB,SACvB,kBAAC,EAAD,CAAcH,OAAQI,IACtB,yBAAKpB,UAAWC,IAAQH,MACpB,kBAAC,EAAD,OAEJ,yBAAKE,UAAWC,IAAQoB,aACpB,kBAAC,EAAD,CAAiBP,OAAQA,O,kCCP1BQ,EAJE,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAAR,OACbD,EAAO,yBAAKvB,UAAWC,IAAQqB,SAAUL,QAASO,IAAkB,MCoBzDC,EAlBI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMb,EAAY,EAAZA,OACxBc,EAAkB,CAAC3B,IAAQwB,YAEjC,OADAG,EAAgBC,KAAKF,EAAO1B,IAAQ6B,KAAO7B,IAAQ8B,OAE/C,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAUR,KAAMI,EAAMH,QAASE,IAC/B,yBAAK1B,UAAW4B,EAAgBI,KAAK,KAAMf,QAASS,GAChD,yBAAK1B,UAAWC,IAAQH,MACpB,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,CAAiBgB,OAAQA,Q,OCXvCmB,E,2MACFC,MAAQ,CACJC,gBAAgB,G,EAGpBC,uBAAyB,WACrB,EAAKC,SAAS,CAACF,gBAAgB,K,EAGnCG,wBAA0B,WACtB,EAAKD,UAAS,SAACE,GACX,MAAM,CAACJ,gBAAiBI,EAAUJ,oB,wEAKtC,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CACIrB,OAAQ0B,KAAKC,MAAMC,gBACnBtB,OAAQoB,KAAKF,0BACjB,kBAAC,EAAD,CACIxB,OAAQ0B,KAAKC,MAAMC,gBACnBf,KAAMa,KAAKN,MAAMC,eACjBT,MAAOc,KAAKJ,yBAChB,0BAAMpC,UAAWC,IAAQ0C,SACpBH,KAAKC,MAAMlC,e,GA1BXqC,aAuCNC,eANS,SAAAX,GACpB,MAAO,CACHQ,gBAAsC,OAArBR,EAAMY,KAAKC,SAIrBF,CAAyBZ,G,iBCvCzBe,EAJEC,IAAMC,OAAO,CAC1BC,QAAS,mD,QCMAC,EAAc,SAACL,EAAOM,GAC/B,MAAO,CACHC,KCIoB,eDHpBP,MAAOA,EACPM,OAAQA,IAIHE,EAAa,SAACC,GACvB,MAAO,CACHF,KCHmB,cDInBE,MAAOA,IAIFC,EAAS,WAIlB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UACjB,CACHL,KCZmB,gBDgBdM,EAAmB,SAACC,GAC7B,OAAO,SAAAC,GACHC,YAAW,WACPD,EAASL,OACO,IAAjBI,KAgCEG,EAAkB,SAACC,GAC5B,MAAO,CACHX,KCrDyB,oBDsDzBW,KAAMA,I,QEnERC,E,4LAGE1B,KAAKC,MAAM0B,a,+BAIX,OAAO,kBAAC,IAAD,CAAUzD,GAAG,U,GAPPkC,aAgBNC,cAAQ,MALI,SAAAiB,GACvB,MAAO,CACHK,SAAU,kBAAML,EAASL,SAGlBZ,CAAkCqB,G,kBCUlCE,GA5BD,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,MACnBC,EAAyB,GAC/B,IAAK,IAAIC,KAAkBH,EACvBE,EAAuB1C,KAAK,CACxB4C,KAAMD,EACNE,OAAQL,EAAYG,KAG5B,IAAMG,EAAoBJ,EAAuBK,KAAI,SAAAC,GACjD,OAAO,0BACK3E,MAAO,CACH4E,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKN,EAAWJ,MAAOI,EAAWJ,KARvC,KAQ+CI,EAAWH,OAR1D,QAWX,OACI,yBAAK1E,UAAWC,KAAQmE,OACpB,2CAAiBO,GACjB,qCAAU,uCAAaS,OAAOC,WAAWf,GAAOgB,QAAQ,O,oBCfrDC,GARC,WACZ,OACI,yBAAKvF,UAAWC,KAAQuF,QAAxB,e,oBCaOC,GAdD,SAAC,GAAD,IAAElF,EAAF,EAAEA,SAAUgB,EAAZ,EAAYA,KAAMmE,EAAlB,EAAkBA,WAAlB,OACV,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAUnE,KAAMA,EAAMC,QAASkE,IAC/B,yBACI1F,UAAWC,KAAQwF,MACnBvF,MAAO,CACHyF,UAAWpE,EAAO,gBAAkB,qBACpCqE,QAASrE,EAAO,IAAM,MAEzBA,GAAQhB,KC8BNsF,GAxCU,SAACC,EAAkB7C,GACxC,kNACIf,MAAQ,CACJsB,MAAO,MAFf,EAqBIuC,oBAAsB,WAClB,EAAK1D,SAAS,CAACmB,MAAO,QAtB9B,qFAK2B,IAAD,OAClBhB,KAAKwD,eAAiB/C,EAAMgD,aAAaC,SAASC,KAAI,SAAAC,GAElD,OADA,EAAK/D,SAAS,CAACmB,MAAO,OACf4C,KAGX5D,KAAK6D,eAAiBpD,EAAMgD,aAAaC,SAASC,KAAI,SAAAG,GAAG,OAAIA,KAAK,SAAA9C,GAC9D,EAAKnB,SAAS,CAACmB,MAAOA,SAZlC,6CAiBQP,EAAMgD,aAAaM,QAAQC,MAAMhE,KAAKwD,gBACtC/C,EAAMgD,aAAaM,QAAQC,MAAMhE,KAAK6D,kBAlB9C,+BA0BQ,OACI,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAO9E,KAAMiB,KAAKN,MAAMsB,MAAOkC,WAAYlD,KAAKuD,qBAC3CvD,KAAKN,MAAMsB,MAAQhB,KAAKN,MAAMsB,MAAMiD,QAAU,MAEnD,kBAACX,EAAqBtD,KAAKC,YA/B3C,GAAqBG,cCKnB8D,G,4LAGElE,KAAKC,MAAMkE,cAAcnE,KAAKC,MAAMM,MAAOP,KAAKC,MAAMY,U,+BAiBtD,OAbab,KAAKC,MAAMmE,QACpB,kBAAC,GAAD,MAEI,6BACCpE,KAAKC,MAAMoE,OAAOjC,KAAI,SAAAkC,GAAK,OACxB,kBAAC,GAAD,CACI3B,IAAK2B,EAAMC,GACX1C,YAAayC,EAAMzC,YACnBC,MAAOwC,EAAMxC,gB,GAfhB1B,aAsCNC,gBAdS,SAAAX,GACpB,MAAO,CACH2E,OAAQ3E,EAAM4E,MAAMD,OACpBD,QAAS1E,EAAM4E,MAAMF,QACrB7D,MAAOb,EAAMY,KAAKC,MAClBM,OAAQnB,EAAMY,KAAKO,WAGA,SAAAS,GACvB,MAAO,CACH6C,cAAe,SAAC5D,EAAOM,GAAR,OAAmBS,ECqBf,SAACf,EAAOM,GAC/B,OAAO,SAAAS,GACHA,EAPG,CACHR,KPlD0B,uBOyD1B,IAAM0D,EAAW,eAAWjE,EAAX,sCAA8CM,EAA9C,KACjBJ,EAAMgE,IAAN,4BAA+BlE,EAA/B,YAAwCiE,IACnCE,MAAK,SAAAhB,GACF,IAAMiB,EAAc,GACpB,IAAK,IAAIhC,KAAOe,EAASkB,KACrBD,EAAYtF,KAAZ,eACOqE,EAASkB,KAAKjC,GADrB,CAEI4B,GAAI5B,KAGZrB,EAhCL,CACHR,KPnC4B,uBOoC5BuD,OA8BoCM,OAC7BE,OAAM,SAAAC,GACLxD,EA3BL,CACHR,KPzC2B,sBO0C3BE,MAyBmC8D,QDpCQH,CAAYpE,EAAOM,QAIvDR,CAA6CgD,GAAiBa,GAAQzD,I,6BE/CxEsE,GAAe,SAACC,EAAWC,GACpC,OAAO,eACAD,EADP,GAEOC,IAIEC,GAAkB,SAACC,EAAOC,GACnC,IAAIC,GAAU,EACd,IAAKD,EACD,OAAO,EAeX,GAZIA,EAAME,WACND,EAA2B,KAAjBF,EAAMI,QAAiBF,GAGjCD,EAAMI,YACNH,EAAUF,EAAMM,QAAUL,EAAMI,WAAaH,GAG7CD,EAAMM,YACNL,EAAUF,EAAMM,QAAUL,EAAMM,WAAaL,GAG7CD,EAAMO,QAAS,CAEfN,EADgB,wIACEO,KAAKT,IAAUE,EAGrC,GAAID,EAAMS,UAAW,CAEjBR,EADgB,QACEO,KAAKT,IAAUE,EAGrC,OAAOA,G,oBCvBIS,GATA,SAAC,GAAD,IAAE/H,EAAF,EAAEA,SAAUiB,EAAZ,EAAYA,QAAZ,IAAqB8B,YAArB,MAA4B,UAA5B,EAAuCiF,EAAvC,EAAuCA,SAAvC,OACX,4BACIvI,UAAW,CAACC,KAAQqI,OAAQrI,KAAQqD,IAAOtB,KAAK,KAChDf,QAASO,EACT+G,SAAUA,GACLhI,I,oBCqDEiI,GA1DD,SAAC,GAAuH,IAAtHC,EAAqH,EAArHA,YAAaC,EAAwG,EAAxGA,cAAef,EAAyF,EAAzFA,MAAOgB,EAAkF,EAAlFA,MAAOC,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,QAAkE,IAAzDC,sBAAyD,SAAjCC,EAAiC,EAAjCA,QAAiC,IAAxBC,oBAAwB,MAAX,MAAW,EAC7HC,EAAe,CAAC,MACdC,EAAe,CAACjJ,KAAQkJ,cAC1BC,EAAkB,KAOtB,OALIP,GAAWC,GAAkBC,IAC7BG,EAAarH,KAAK5B,KAAQoJ,SAC1BD,EAAkB,uBAAGpJ,UAAWC,KAAQqJ,iBAAtB,gCAGdb,GACJ,IAAM,QACFQ,EAAe,yCACKjJ,UAAWkJ,EAAalH,KAAK,KAC7B2F,MAAOA,GACHe,EAHT,CAIKa,SAAUX,EACVY,aAAcR,KAClC,MACJ,IAAM,WACFC,EAAe,4CACKjJ,UAAWkJ,EAAalH,KAAK,MACzB0G,EAFT,CAGKa,SAAUX,KAC9B,MACJ,IAAM,SACFK,EAAe,4BACKjJ,UAAWkJ,EAAalH,KAAK,KAC7B2F,MAAOA,EACP4B,SAAUX,GACLF,EAAce,QAAQ7E,KAAI,SAAA8E,GAAM,OAC7B,4BACI/B,MAAO+B,EAAO/B,MACdxC,IAAKuE,EAAO/B,OACP+B,EAAO3E,aAI5C,MACJ,QACIkE,EAAe,yCACKjJ,UAAWkJ,EAAalH,KAAK,KAC7B2F,MAAOA,GACHe,EAHT,CAIKa,SAAUX,EACVY,aAAcR,KAG1C,IAAMW,EAAchB,EAAQ,2BAAO3I,UAAWkJ,EAAalH,KAAK,MAAO2G,GAAiB,KACxF,OACI,yBAAK3I,UAAWC,KAAQuI,OACnBmB,EACAV,EACAG,IC1CPQ,G,2MACF1H,MAAQ,CACJ2H,SAAU,CACNC,MAAO,CACHrB,YAAa,QACbC,cAAe,CACXpF,KAAM,QACNyG,YAAa,gBAEjBpC,MAAO,GACPqC,WAAY,CACRlC,UAAU,EACVK,SAAS,GAEb8B,OAAO,EACPlB,SAAS,GAEbmB,SAAU,CACNzB,YAAa,QACbC,cAAe,CACXpF,KAAM,WACNyG,YAAa,YAEjBpC,MAAO,GACPqC,WAAY,CACRlC,UAAU,EACVE,UAAW,GAEfiC,OAAO,EACPlB,SAAS,IAGjBoB,UAAU,G,EASdC,mBAAqB,SAACC,EAAOC,GACzB,IAAMC,EAAkBhD,GAAa,EAAKrF,MAAM2H,SAAZ,gBAC/BS,EAAc/C,GAAa,EAAKrF,MAAM2H,SAASS,GAAc,CAC1D3C,MAAO0C,EAAMG,OAAO7C,MACpBsC,MAAOvC,GAAgB2C,EAAMG,OAAO7C,MAAO,EAAKzF,MAAM2H,SAASS,GAAaN,YAC5EjB,SAAS,MAIjB,EAAK1G,SAAS,CAAEwH,SAAUU,K,EAG9BE,cAAgB,SAACnD,GACbA,EAAEoD,iBACF,EAAKjI,MAAMkI,OAAO,EAAKzI,MAAM2H,SAASC,MAAMnC,MAAO,EAAKzF,MAAM2H,SAASK,SAASvC,MAAO,EAAKzF,MAAMiI,W,EAGtGS,sBAAwB,WACpB,EAAKvI,UAAS,SAAAE,GACV,MAAO,CAAE4H,UAAW5H,EAAU4H,c,mFAxB7B3H,KAAKC,MAAMoI,UAAwC,MAA5BrI,KAAKC,MAAMqI,cACnCtI,KAAKC,MAAMsI,sB,+BA2BT,IAAD,OACCC,EAAe,GACrB,IAAK,IAAI7F,KAAO3C,KAAKN,MAAM2H,SACvBmB,EAAanJ,KAAK,CACdkF,GAAI5B,EACJ8F,OAAQzI,KAAKN,MAAM2H,SAAS1E,KAIpC,IAAM+F,EAAO1I,KAAKC,MAAMmE,QAAU,kBAAC,GAAD,MAAcoE,EAAapG,KAAI,SAAAuG,GAAW,OACxE,kBAAC,GAAD,CACIhG,IAAKgG,EAAYpE,GACjB0B,YAAa0C,EAAYF,OAAOxC,YAChCC,cAAeyC,EAAYF,OAAOvC,cAClCf,MAAOwD,EAAYF,OAAOtD,MAC1BkB,SAAUsC,EAAYF,OAAOhB,MAC7BrB,QAAS,SAACyB,GAAD,OAAW,EAAKD,mBAAmBC,EAAOc,EAAYpE,KAC/DgC,QAASoC,EAAYF,OAAOlC,QAC5BD,eAAgBqC,EAAYF,OAAOjB,WACnChB,aAAa,UAGfoC,EAAe5I,KAAKC,MAAMe,MAAQ,2BAAIhB,KAAKC,MAAMe,MAAMiD,SAAc,KAErE4E,EAAe7I,KAAKC,MAAM3B,OAAS,kBAAC,IAAD,CAAUJ,GAAI8B,KAAKC,MAAMqI,eAAmB,KAErF,OACI,yBAAK9K,UAAWC,KAAQ2J,MACnByB,EACAD,EACD,0BAAME,SAAU9I,KAAKiI,eAChBS,EACD,kBAAC,GAAD,gBAEJ,kBAAC,GAAD,CACI1J,QAASgB,KAAKoI,sBACdtH,KAAK,UAFT,aAE6Bd,KAAKN,MAAMiI,SAAW,UAAY,gB,GApG5DvH,aA2HJC,gBAjBS,SAAAX,GACpB,MAAO,CACH0E,QAAS1E,EAAMY,KAAKyI,UACpB/H,MAAOtB,EAAMY,KAAKU,MAClB1C,OAA6B,OAArBoB,EAAMY,KAAKC,MACnB8H,SAAU3I,EAAMsJ,cAAcX,SAC9BC,aAAc5I,EAAMY,KAAKgI,iBAIN,SAAAhH,GACvB,MAAO,CACH6G,OAAQ,SAACb,EAAOI,EAAUC,GAAlB,OAA+BrG,EZ3F3B,SAACgG,EAAOI,GAAgC,IAAtBC,EAAqB,wDACvD,OAAO,SAAArG,GACHA,EAvCG,CACHR,KCSkB,eD8BlB,IAAMmI,EAAW,CACb3B,MAAOA,EACPI,SAAUA,EACVwB,mBAAmB,GAGnBC,EAAMxB,EACN,oHACA,wGAEJlH,IAAM2I,KAAKD,EAAKF,GACXvE,MAAK,SAAA2E,GACF,IAAMC,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAkC,IAAtBH,EAAKzE,KAAK6E,WACjEvI,aAAawI,QAAQ,QAASL,EAAKzE,KAAK+E,SACxCzI,aAAawI,QAAQ,iBAAkBJ,GACvCpI,aAAawI,QAAQ,SAAUL,EAAKzE,KAAKgF,SACzCtI,EAASV,EAAYyI,EAAKzE,KAAK+E,QAASN,EAAKzE,KAAKgF,UAClDtI,EAASF,EAAiBiI,EAAKzE,KAAK6E,eAEvC5E,OAAM,SAAAC,GACHxD,EAASP,EAAW+D,EAAEpB,SAASkB,KAAK5D,YYoEIV,CAAKgH,EAAOI,EAAUC,KACtEY,kBAAmB,kBAAMjH,EAASE,EAAgB,UAI3CnB,CAA6C+G,I,qEC/F7CyC,GAtCU,SAAC5J,GACtB,IAAIoC,EAAa,KAEjB,OAAQpC,EAAMa,MACV,IAAM,eACFuB,EAAa,yBAAK7E,UAAWC,KAAQqM,cACrC,MACJ,IAAM,YACFzH,EACI,yBAAK7E,UAAWC,KAAQsM,UACpB,yBAAKvM,UAAWC,KAAQuM,QACxB,yBAAKxM,UAAWC,KAAQwM,SAGhC,MACJ,IAAM,OACF5H,EAAa,yBAAK7E,UAAWC,KAAQyM,OACrC,MACJ,IAAM,SACF7H,EAAa,yBAAK7E,UAAWC,KAAQ0M,SACrC,MACJ,IAAM,QACF9H,EAAa,yBAAK7E,UAAWC,KAAQ2M,QACrC,MACJ,IAAM,QACF/H,EAAa,yBAAK7E,UAAWC,KAAQ4M,QACrC,MACJ,QACIhI,EAAa,KAGrB,OAAOA,GCPIiI,GAxBA,SAAC,GAAmB,IAAlBzI,EAAiB,EAAjBA,YACTE,EAAyBwI,OAAOC,KAAK3I,GACpCO,KAAI,SAAAO,GACD,OAAO,aAAI8H,MAAM5I,EAAYc,KAAOP,KAAI,SAACsI,EAAGC,GACxC,OAAO,kBAAC,GAAD,CAAkBhI,IAAKA,EAAMgI,EAAG7J,KAAM6B,UAGpDiI,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACnB,IAMP,OAJsC,IAAlC/I,EAAuB0D,SACvB1D,EAAyB,+DAIzB,yBAAKvE,UAAWC,KAAQ6M,QACpB,kBAAC,GAAD,CAAkBxJ,KAAK,cACtBiB,EACD,kBAAC,GAAD,CAAkBjB,KAAK,mBCFpBkK,GAhBS,SAAC,GAAqD,IAApDnJ,EAAmD,EAAnDA,YAAaoJ,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,iBACnD,OACI,yBAAK1N,UAAWC,KAAQuN,iBACpB,sDACA,yBAAKtN,MAAO,CAACyN,MAAO,OAAQ3I,OAAQ,SAChC,kBAAC,GAAD,CAAQX,YAAaA,KAEzB,kBAAC,GAAD,CACIf,KAAK,SACL9B,QAASiM,GAFb,UAGA,kBAAC,GAAD,CACIjM,QAASkM,GADb,c,oBCHNE,G,2MACF1L,MAAQ,CACJ2L,UAAW,CACPpJ,KAAM,CACFgE,YAAa,QACbC,cAAe,CACXpF,KAAM,OACNyG,YAAa,aAEjBpC,MAAO,GACPqC,WAAY,CACRlC,UAAU,GAEdmC,OAAO,EACPlB,SAAS,GAEb+E,OAAQ,CACJrF,YAAa,QACbC,cAAe,CACXpF,KAAM,OACNyG,YAAa,UAEjBpC,MAAO,GACPqC,WAAY,CACRlC,UAAU,GAEdmC,OAAO,EACPlB,SAAS,GAEbgF,QAAS,CACLtF,YAAa,QACbC,cAAe,CACXpF,KAAM,OACNyG,YAAa,YAEjBpC,MAAO,GACPqC,WAAY,CACRlC,UAAU,EACVE,UAAW,EACXE,UAAW,EACXG,WAAW,GAEf4B,OAAO,EACPlB,SAAS,GAEbiF,QAAS,CACLvF,YAAa,QACbC,cAAe,CACXpF,KAAM,OACNyG,YAAa,WAEjBpC,MAAO,GACPqC,WAAY,CACRlC,UAAU,GAEdmC,OAAO,EACPlB,SAAS,GAEbe,MAAO,CACHrB,YAAa,QACbC,cAAe,CACXpF,KAAM,QACNyG,YAAa,eAEjBpC,MAAO,GACPqC,WAAY,CACRlC,UAAU,EACVK,SAAS,GAEb8B,OAAO,EACPlB,SAAS,GAEbkF,eAAgB,CACZxF,YAAa,SACbC,cAAe,CACXe,QAAS,CACL,CACI9B,MAAO,UACP5C,QAAS,WAEb,CACI4C,MAAO,WACP5C,QAAS,cAIrBkF,OAAO,EACPtC,MAAO,YAGfuG,aAAa,G,EAGjBC,aAAe,SAAC9D,GACZA,EAAMK,iBAEN,IAAM0D,EAAW,GACjB,IAAK,IAAIC,KAAyB,EAAKnM,MAAM2L,UACzCO,EAASC,GAAyB,EAAKnM,MAAM2L,UAAUQ,GAAuB1G,MAGlF,IAAMb,EAAQ,CACVzC,YAAa,EAAK5B,MAAM4B,YACxBC,MAAO,EAAK7B,MAAM6L,WAClBC,UAAWH,EACX/K,OAAQ,EAAKZ,MAAMY,QAGvB,EAAKZ,MAAM+L,cAAc1H,EAAO,EAAKrE,MAAMM,Q,EAG/CqH,mBAAqB,SAACC,EAAOoE,GACzB,IAAMC,EAAqBnH,GAAa,EAAKrF,MAAM2L,UAAUY,GAAkB,CAC3E9G,MAAO0C,EAAMG,OAAO7C,MACpBsC,MAAOvC,GAAgB2C,EAAMG,OAAO7C,MAChC,EAAKzF,MAAM2L,UAAUY,GAAiBzE,YAC1CjB,SAAS,IAGP4F,EAAmBpH,GAAa,EAAKrF,MAAM2L,UAAZ,gBAChCY,EAAkBC,IAGnBR,GAAc,EAClB,IAAK,IAAIU,KAAmBD,EACxBT,EAAcS,EAAiBC,GAAiB3E,OAASiE,EAG7D,EAAK7L,SAAS,CAACwL,UAAWc,EAAkBT,YAAaA,K,wEAGnD,IAAD,OAEClD,EAAe,GAErB,IAAK,IAAI7F,KAAO3C,KAAKN,MAAM2L,UACvB7C,EAAanJ,KAAK,CACdkF,GAAI5B,EACJ8F,OAAQzI,KAAKN,MAAM2L,UAAU1I,KAIrC,IAAI+F,EACA,0BAAMI,SAAU9I,KAAK2L,cAChBnD,EAAapG,KAAI,SAAAuG,GAAW,OACzB,kBAAC,GAAD,CACIhG,IAAKgG,EAAYpE,GACjB0B,YAAa0C,EAAYF,OAAOxC,YAChCC,cAAeyC,EAAYF,OAAOvC,cAClCf,MAAOwD,EAAYF,OAAOtD,MAC1BkB,SAAUsC,EAAYF,OAAOhB,MAC7BrB,QAAS,SAACyB,GAAD,OAAW,EAAKD,mBAAmBC,EAAOc,EAAYpE,KAC/DgC,QAASoC,EAAYF,OAAOlC,QAC5BD,eAAgBqC,EAAYF,OAAOjB,gBAE3C,kBAAC,GAAD,CAAQzB,UAAW/F,KAAKN,MAAMgM,aAA9B,UAOR,OAHI1L,KAAKC,MAAMmE,UACXsE,EAAO,kBAAC,GAAD,OAGP,yBAAKlL,UAAWC,KAAQ2N,aACpB,uDACC1C,O,GArKStI,aA2LXC,gBAVS,SAAAX,GACpB,MAAO,CACHmC,YAAanC,EAAMsJ,cAAcnH,YACjCiK,WAAYpM,EAAMsJ,cAAc8C,WAChC1H,QAAS1E,EAAM4E,MAAMF,QACrB7D,MAAOb,EAAMY,KAAKC,MAClBM,OAAQnB,EAAMY,KAAKO,WAZA,SAAAS,GACvB,MAAO,CACH0K,cAAe,SAACD,EAAWxL,GAAZ,OAAsBe,ER/Jf,SAACyK,EAAWxL,GACtC,OAAO,SAAAe,GACHA,EAPG,CACHR,KPf6B,0BOsB7BL,EAAM2I,KAAN,4BAAgC7I,GAASwL,GACpCrH,MAAK,SAAAhB,GACFpC,EA1BqB,SAACiD,EAAIwH,GACtC,MAAO,CACHjL,KPF+B,0BOG/ByD,GAAIA,EACJwH,UAAWA,GAsBMM,CAAsB3I,EAASkB,KAAK3C,KAAM8J,OACpDlH,OAAM,SAAAC,GACLxD,EAnBL,CACHR,KPT8B,yBOU9BE,MAiBsC8D,QQwJQwH,CAAeP,EAAWxL,QAcjEF,CAA6CgD,GAAiB+H,GAAa3K,IChMpF8L,G,2MAEFC,sBAAwB,WACpB,EAAKvM,MAAMwM,QAAQC,U,EAGvBC,wBAA0B,WACtB,EAAK1M,MAAMwM,QAAQG,QAAQ,2B,wEAI3B,IAAIC,EAAU,kBAAC,IAAD,CAAU3O,GAAG,MAE3B,GAAI8B,KAAKC,MAAM4B,YAAa,CACxB,IAAMiL,EAAmB9M,KAAKC,MAAM8M,UAAY,kBAAC,IAAD,CAAU7O,GAAG,MAAS,KACtE2O,EACI,6BACKC,EACD,kBAAC,GAAD,CACIjL,YAAa7B,KAAKC,MAAM4B,YACxBoJ,eAAgBjL,KAAKwM,sBACrBtB,iBAAkBlL,KAAK2M,0BAC3B,kBAAC,IAAD,CACIlL,KAAMzB,KAAKC,MAAM+M,MAAMvL,KAAO,gBAC9BwL,UAAW7B,MAI3B,OAAOyB,M,GA5BQzM,aAuCRC,gBAPS,SAAAX,GACpB,MAAO,CACHmC,YAAanC,EAAMsJ,cAAcnH,YACjCkL,UAAWrN,EAAM4E,MAAMyI,aAIhB1M,CAAyBkM,I,wCC9BzBW,GAbM,SAAC,GAAD,IAAE/G,EAAF,EAAEA,MAAOgH,EAAT,EAASA,IAAKC,EAAd,EAAcA,OAAQrH,EAAtB,EAAsBA,SAAtB,OACjB,yBAAKvI,UAAWC,KAAQyP,cACpB,yBAAK1P,UAAWC,KAAQ4P,OAAQlH,GAChC,4BACI3I,UAAWC,KAAQ6P,KACnB7O,QAAS2O,EACTrH,SAAUA,GAHd,QAIA,4BACIvI,UAAWC,KAAQ8P,KACnB9O,QAAS0O,GAFb,UCNF9F,GAAW,CACb,CAAElB,MAAO,QAASrF,KAAM,SACxB,CAAEqF,MAAO,QAASrF,KAAM,SACxB,CAAEqF,MAAO,SAAUrF,KAAM,UACzB,CAAEqF,MAAO,OAAQrF,KAAM,SA+BZ0M,GA5BO,SAAC,GAQhB,IAPHC,EAOE,EAPFA,gBACAC,EAME,EANFA,kBACA3H,EAKE,EALFA,SACAjE,EAIE,EAJFA,MACA6L,EAGE,EAHFA,YACAC,EAEE,EAFFA,QACAtP,EACE,EADFA,OAEA,OACI,yBAAKd,UAAWC,KAAQ+P,eACpB,6CAAkB,gCAAS1L,EAAMgB,QAAQ,KACxCuE,GAASjF,KAAI,SAAAyL,GAAO,OACjB,kBAAC,GAAD,CACIlL,IAAKkL,EAAQ1H,MACbA,MAAO0H,EAAQ1H,MACfgH,IAAK,kBAAMM,EAAgBI,EAAQ/M,OACnCsM,OAAQ,kBAAMM,EAAkBG,EAAQ/M,OACxCiF,SAAUA,EAAS8H,EAAQ/M,WAEnC,4BACIiF,UAAW4H,EACXnQ,UAAWC,KAAQqQ,YACnBrP,QAASmP,GAAUtP,EAAS,YAAc,sBCJ3CyP,GA3BM,SAAC,GAKf,IAJHlM,EAIE,EAJFA,YACAmM,EAGE,EAHFA,eACAC,EAEE,EAFFA,iBACAnM,EACE,EADFA,MAEMoM,EAAqB3D,OAAOC,KAAK3I,GAClCO,KAAI,SAAAO,GAAG,OACJ,wBAAIA,IAAKA,GACL,0BAAMjF,MAAO,CAAC,cAAiB,eAAgBiF,GADnD,KACiEd,EAAYc,OAGrF,OACI,kBAAC,WAAD,KACI,0CACA,kFACA,4BACKuL,GAEL,2BAAG,gDAAsBpM,EAAMgB,QAAQ,KACvC,mDACA,kBAAC,GAAD,CAAQhC,KAAK,SAAS9B,QAASgP,GAA/B,UACA,kBAAC,GAAD,CAAQhP,QAASiP,GAAjB,cCZCE,GAAb,2MACIzO,MAAQ,CACJ0O,aAAa,GAFrB,EASIC,oBAAsB,SAACxM,GAMnB,OALY0I,OAAOC,KAAK3I,GACnBO,KAAI,SAAAO,GAAG,OAAId,EAAYc,MACvBiI,QAAO,SAAC0D,EAAKxD,GACV,OAAOwD,EAAMxD,IACd,GACM,GAfrB,EAkBIyD,gBAAkB,WACV,EAAKtO,MAAM3B,OACX,EAAKuB,SAAS,CAACuO,aAAa,KAE5B,EAAKnO,MAAMsI,kBAAkB,aAC7B,EAAKtI,MAAMwM,QAAQpN,KAAK,WAvBpC,EA4BImP,sBAAwB,WACpB,EAAK3O,SAAS,CAACuO,aAAa,KA7BpC,EAgCIK,wBAA0B,WACtB,EAAKxO,MAAMyO,iBACX,EAAKzO,MAAMwM,QAAQpN,KAAK,cAlChC,mFAMQW,KAAKC,MAAM0O,mBANnB,+BAsCQ,IAAMC,EAAW,eACV5O,KAAKC,MAAM4B,aAGlB,IAAK,IAAIc,KAAOiM,EACZA,EAAYjM,GAAOiM,EAAYjM,IAAQ,EAG3C,IAAIkM,EAAe7O,KAAKC,MAAM4B,YACtB,kBAAC,GAAD,CACIA,YAAa7B,KAAKC,MAAM4B,YACxBmM,eAAgBhO,KAAKwO,sBACrBP,iBAAkBjO,KAAKyO,wBACvB3M,MAAO9B,KAAKC,MAAM6L,aAClB,KAERgD,EAAS9O,KAAKC,MAAMe,MAAQ,2DAAsC,kBAAC,GAAD,MAkBtE,OAhBIhB,KAAKC,MAAM4B,cACXiN,EACI,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAQjN,YAAa7B,KAAKC,MAAM4B,cAChC,kBAAC,GAAD,CACI4L,gBAAiBzN,KAAKC,MAAM8O,kBAC5BrB,kBAAmB1N,KAAKC,MAAM+O,oBAC9BjJ,SAAU6I,EACVjB,YAAa3N,KAAKqO,oBAAoBrO,KAAKC,MAAM4B,aACjDC,MAAO9B,KAAKC,MAAM6L,WAClB8B,QAAS5N,KAAKuO,gBACdjQ,OAAQ0B,KAAKC,MAAM3B,WAM/B,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAOS,KAAMiB,KAAKN,MAAM0O,YAAalL,WAAYlD,KAAKwO,uBACjDK,GAEJC,OA7EjB,GAAmC1O,aAuGpBC,gBApBS,SAAAX,GACpB,MAAO,CACHmC,YAAanC,EAAMsJ,cAAcnH,YACjCiK,WAAYpM,EAAMsJ,cAAc8C,WAChC9K,MAAOtB,EAAMsJ,cAAchI,MAC3B1C,OAA6B,OAArBoB,EAAMY,KAAKC,UAKA,SAAAe,GACvB,MAAO,CACHyN,kBAAmB,SAAC9M,GAAD,OAAUX,ECzGR,SAACW,GAC1B,MAAO,CACHnB,KrBLsB,iBqBMtBkB,eAAgBC,GDsGsBgN,CAAchN,KACpD+M,oBAAqB,SAAC/M,GAAD,OAAUX,ECnGP,SAACW,GAC7B,MAAO,CACHnB,KrBXyB,oBqBYzBkB,eAAgBC,GDgGwBiN,CAAiBjN,KACzD0M,eAAgB,kBAAMrN,GC/EnB,SAAAA,GACHb,EAAMgE,IAAI,qBAAqBC,MAAK,SAAA2E,GAChC/H,EAfD,CACHR,KrBjBuB,kBqBkBvBe,YAa4BwH,EAAKzE,UAC9BC,OAAM,WACLvD,EAVD,CACHR,KrBvBgC,oCoB4GhC4N,eAAgB,kBAAMpN,EbxEnB,CACHR,KPhCqB,mBoBwGrByH,kBAAmB,SAAC9G,GAAD,OAAUH,EAASE,EAAgBC,QAI/CpB,CAA6CgD,GAAiB8K,GAAe1N,IEtGtF0O,G,4LAGFnP,KAAKC,MAAMmP,oB,+BAKX,IAAIC,EAAS,GAiBb,OAhBIrP,KAAKC,MAAM3B,QACb+Q,EAAOhQ,KACL,CACEoC,KAAM,YACNwL,UAAWV,IAEb,CACE9K,KAAM,UACNwL,UAAW/I,IAEb,CACEzC,KAAM,UACNwL,UAAWvL,IAKf,6BACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACG2N,EAAOjN,KAAI,SAAAkN,GAAK,OACf,kBAAC,IAAD,CAAO7N,KAAM6N,EAAM7N,KAAMwL,UAAWqC,EAAMrC,UAAWtK,IAAK2M,EAAM7N,UAElE,kBAAC,IAAD,CAAOA,KAAK,QAAQwL,UAAW7F,KAC/B,kBAAC,IAAD,CAAO3F,KAAK,IAAIxD,OAAK,EAACgP,UAAWkB,KACjC,kBAAC,IAAD,CAAUjQ,GAAG,a,GAlCPkC,aAsDHmP,eAAWlP,aAZF,SAAAX,GACtB,MAAO,CACLpB,OAA6B,OAArBoB,EAAMY,KAAKC,UAII,SAAAe,GACzB,MAAO,CACL8N,gBAAiB,kBAAM9N,GvBahB,SAAAA,GACH,IAAMf,EAAQW,aAAasO,QAAQ,SACnC,GAAKjP,EAEE,CACH,IAAMc,EAAiB,IAAIkI,KAAKrI,aAAasO,QAAQ,mBAErD,GAAInO,EAAiB,IAAIkI,KAAQ,CAC7B,IAAM1I,EAAUK,aAAasO,QAAQ,UACrClO,EAASV,EAAYL,EAAOM,IAC5BS,EAASF,GAAkBC,EAAemI,WAAY,IAAID,MAAOC,WAAa,WAE9ElI,EAASL,UATbK,EAASL,YuBZKZ,CAA6C8O,KCxDnDM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,2D,aCfA6C,GAAe,CACjBhO,YAAa,KACbiK,WAAY,EACZ9K,OAAO,EACPqH,UAAU,GAGRyH,GAAoB,CACtBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAGLjB,GAAgB,SAACvP,EAAOyQ,GAC1B,IAAMC,EAAiB,gBAAMD,EAAOnO,eAAiBtC,EAAMmC,YAAYsO,EAAOnO,gBAAkB,GAE1FqO,EAAe,CACjBxO,YAFuBkD,GAAarF,EAAMmC,YAAauO,GAGvDtE,WAAYpM,EAAMoM,WAAagE,GAAkBK,EAAOnO,gBACxDqG,UAAU,GAEd,OAAOtD,GAAarF,EAAO2Q,IAGzBnB,GAAmB,SAACxP,EAAOyQ,GAC7B,IAAMG,EAAU,gBAAMH,EAAOnO,eAAiBtC,EAAMmC,YAAYsO,EAAOnO,gBAAkB,GAEnFuO,EAAY,CACd1O,YAFgBkD,GAAarF,EAAMmC,YAAayO,GAGhDxE,WAAYpM,EAAMoM,WAAagE,GAAkBK,EAAOnO,gBACxDqG,UAAU,GAEd,OAAOtD,GAAarF,EAAO6Q,IAGzBC,GAAiB,SAAC9Q,EAAOyQ,GAC3B,OAAOpL,GAAarF,EAAO,CACvBmC,YAAa,CACTkO,MAAOI,EAAOtO,YAAYkO,MAC1BG,MAAOC,EAAOtO,YAAYqO,MAC1BF,OAAQG,EAAOtO,YAAYmO,OAC3BC,KAAME,EAAOtO,YAAYoO,MAE7BnE,WAAY,EACZ9K,OAAO,EACPqH,UAAU,KAcHoI,GAVC,WAAmC,IAAlC/Q,EAAiC,uDAAzBmQ,GAAcM,EAAW,uCAC9C,OAAOA,EAAOrP,MACV,IxBvDsB,iBwBuDW,OAAOmO,GAAcvP,EAAOyQ,GAC7D,IxBvDyB,oBwBuDW,OAAOjB,GAAiBxP,EAAOyQ,GACnE,IxBvDuB,kBwBuDW,OAAOK,GAAe9Q,EAAOyQ,GAC/D,IxBvDgC,2BwBuDW,OAAOpL,GAAarF,EAAO,CAACsB,OAAO,EAAMqH,UAAU,IAC9F,QAAS,OAAO3I,ICxDlBmQ,GAAe,CACjBxL,OAAQ,GACRD,SAAS,EACT2I,WAAW,GAgCA0D,GA7BC,WAAmC,IAAlC/Q,EAAiC,uDAAzBmQ,GAAcM,EAAW,uCAC9C,OAAQA,EAAOrP,MACX,IzBHqB,gByBIjB,OAAOiE,GAAarF,EAAO,CAAEqN,WAAW,IAC5C,IzBN6B,wByBOzB,OAAQhI,GAAarF,EAAO,CAAE0E,SAAS,IAC3C,IzBV+B,0ByBW3B,IAAMsM,EAAW3L,GAAaoL,EAAOpE,UAAW,CAAExH,GAAI4L,EAAO5L,KAC7D,OAAOQ,GAAarF,EAAO,CACvB0E,SAAS,EACTC,OAAQ3E,EAAM2E,OAAO0G,OAAO2F,GAC5B3D,WAAW,IAEnB,IzBhB8B,yByBiB1B,OAAOhI,GAAarF,EAAO,CAAE0E,SAAS,IAC1C,IzBd0B,qByBetB,OAAOW,GAAarF,EAAO,CAAE0E,SAAS,IAC1C,IzBf4B,uByBgBxB,OAAOW,GAAarF,EAAO,CACvB2E,OAAQ8L,EAAO9L,OACfD,SAAS,IAEjB,IzBnB2B,sByBoBvB,OAAOW,GAAarF,EAAO,CAAE0E,SAAS,IAC1C,QACI,OAAO1E,IC/BbmQ,GAAe,CACjBtP,MAAO,KACPM,OAAQ,KACRG,MAAO,KACP+H,WAAW,EACXT,aAAc,KA0BHmI,GAvBC,WAAmC,IAAlC/Q,EAAiC,uDAAzBmQ,GAAcM,EAAW,uCAC9C,OAAOA,EAAOrP,MACV,I1BCkB,a0BAd,OAAOiE,GAAarF,EAAO,CAAEsB,MAAO,KAAM+H,WAAW,IACzD,I1BAoB,e0BChB,OAAOhE,GAAarF,EAAO,CACnBa,MAAO4P,EAAO5P,MACdM,OAAQsP,EAAOtP,OACfG,MAAO,KACP+H,WAAW,IAGvB,I1BPmB,c0BQf,OAAOhE,GAAarF,EAAO,CAAEsB,MAAOmP,EAAOnP,MAAO+H,WAAW,IACjE,I1BRmB,c0BSf,OAAOhE,GAAarF,EAAO,CAAEa,MAAO,KAAMM,OAAQ,OACtD,I1BTyB,oB0BUrB,OAAOkE,GAAarF,EAAO,CAAE4I,aAAc6H,EAAO1O,OACtD,QACI,OAAO/B,I,SChBbiR,GAAcC,aAAgB,CAChC5H,cAAe6H,GACfvM,MAAOwM,GACPxQ,KAAMyQ,KAGJC,GAAQC,aAAYN,GAAaO,aAAgBC,OAEjDC,GACF,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAIZK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SJsGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjN,MAAK,SAAAkN,GACJA,EAAaC,gBAEdhN,OAAM,SAAA7D,GACL8Q,QAAQ9Q,MAAMA,EAAMiD,c","file":"static/js/main.8baa57fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PrDi6\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToogle_DrawerToggle__3XvuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\",\"Input\":\"ContactData_Input__2fK5-\"};","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst Logo = ({height}) => {\n    return (\n        <div className={classes.Logo} style={{height: height}}>\n            <img src={burgerLogo} alt='burger-logo' />\n        </div>\n    );\n};\n\nexport default Logo;","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst NavigationItem = ({children, link, exact}) => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            to={link}\n            exact={exact}\n            activeClassName={classes.active}>{children}</NavLink>\n    </li>\n);\n\nexport default NavigationItem;","import React from 'react';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './NavigationItems.module.css';\n\nconst NavigationItems = ({isAuth}) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link='/' exact>Burger Builder</NavigationItem>\n        {isAuth ? <NavigationItem link='/orders'>Orders</NavigationItem> : null}\n        {isAuth ?\n            <NavigationItem link='/logout'>Logout</NavigationItem> :\n            <NavigationItem link='/auth'>Authenticate</NavigationItem>\n        }\n    </ul>\n);\n\nexport default NavigationItems;","import React from 'react';\nimport classes from './DrawerToogle.module.css';\n\nconst DrawerToogle = ({cliked}) => {\n    return (\n        <div onClick={cliked} className={classes.DrawerToggle}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n\nexport default DrawerToogle;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToogle from '../SideDrawer/DrawerToogle/DrawerToogle';\n\nconst Toolbar = ({toogle, isAuth}) => {\n    return (\n        <header className={classes.Toolbar}>\n            <DrawerToogle cliked={toogle} />\n            <div className={classes.Logo}>\n                <Logo />\n            </div>\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems isAuth={isAuth} />\n            </nav>\n        </header>\n    );\n};\n\nexport default Toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = ({show, clicked}) => (\n    show ? <div className={classes.Backdrop} onClick={clicked}></div> : null\n);\n\nexport default Backdrop;","import React, { Fragment } from 'react';\nimport classes from './SideDrawer.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst SideDrawer = ({close, open, isAuth}) => {\n    const attachedClasses = [classes.SideDrawer];\n    attachedClasses.push(open ? classes.Open : classes.Close);\n    return (\n        <Fragment>\n            <Backdrop show={open} clicked={close}/>\n            <div className={attachedClasses.join(' ')} onClick={close}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuth={isAuth} />\n                </nav>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default SideDrawer;","import React, { Component, Fragment } from 'react';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    };\n\n    sideDrawerCloseHandler = () => {\n        this.setState({showSideDrawer: false});\n    };\n\n    sideDrawerToogleHandler = () => {\n        this.setState((prevState) => {\n            return{showSideDrawer: !prevState.showSideDrawer}\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Toolbar\n                    isAuth={this.props.isAuthenticated}\n                    toogle={this.sideDrawerToogleHandler} />\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    close={this.sideDrawerCloseHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burguer-1fcc5.firebaseio.com/'\n});\n\nexport default instance;","import axios from 'axios';\nimport { AUTH_START, AUTH_FAILED, AUTH_SUCCESS, AUTH_LOGOUT, SET_AUTH_REDIRECT } from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: AUTH_START\n    }\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: AUTH_SUCCESS,\n        token: token,\n        userId: userId\n    }\n};\n\nexport const authFailed = (error) => {\n    return {\n        type: AUTH_FAILED,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userID');\n    return {\n        type: AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeOut = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup = false) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n\n        let url = isSignup ?\n            'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8' :\n            'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8';\n\n        axios.post(url, authData)\n            .then(resp => {\n                const expirationDate = new Date(new Date().getTime() + resp.data.expiresIn * 1000);\n                localStorage.setItem('token', resp.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userID', resp.data.localId)\n                dispatch(authSuccess(resp.data.idToken, resp.data.localId));\n                dispatch(checkAuthTimeOut(resp.data.expiresIn));\n            })\n            .catch(e => {\n                dispatch(authFailed(e.response.data.error));\n            });\n    };\n};\n\nexport const setRedirectPath = (path) => {\n    return {\n        type: SET_AUTH_REDIRECT,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationTime = new Date(localStorage.getItem('expirationDate'));\n\n            if (expirationTime > new Date()) {\n                const userId =  localStorage.getItem('userID');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeOut((expirationTime.getTime() - new Date().getTime()) / 1000));\n            } else {\n                dispatch(logout());\n            }\n            \n        }\n\n    };\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAILED = 'FETCH_ORDERS_FAILED';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILED = 'AUTH_FAILED';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT = 'SET_AUTH_REDIRECT';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../../store/actions';\nimport { Redirect } from 'react-router-dom';\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        this.props.onLogout();\n    }\n\n    render() {\n        return <Redirect to='/' />;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(logout())\n    };\n};\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\nimport classes from './Order.module.css';\n\nconst Order = ({ingredients, price}) => {\n    const transformedIngredients = [];\n    for (let ingredientName in ingredients) {\n        transformedIngredients.push({\n            name: ingredientName,\n            amount: ingredients[ingredientName]\n        });\n    }\n    const ingredientsOutput = transformedIngredients.map(ingredient => {\n        return <span\n                    style={{\n                        textTransform: 'capitalize',\n                        display: 'inline-block',\n                        margin: '0 8px',\n                        border: '1px solid #ccc',\n                        padding: '5px'\n                    }}\n                    key={ingredient.name}>{ingredient.name} ({ingredient.amount})</span>\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(price).toFixed(2)}</strong></p>\n        </div>\n    );\n};\n\nexport default Order;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst Spinner = () => {\n    return (\n        <div className={classes.Loader}>\n            Loading...\n        </div>\n    );\n};\n\nexport default Spinner;","import React, { Fragment } from 'react';\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst Modal = ({children, show, modalClose}) => (\n    <Fragment>\n        <Backdrop show={show} clicked={modalClose} />\n        <div\n            className={classes.Modal}\n            style={{\n                transform: show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: show ? '1' : '0'\n            }}>\n            {show && children}\n        </div>\n    </Fragment>\n);\n\nexport default Modal;","import React, { Fragment, Component } from 'react';\nimport Modal from '../../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        };\n\n        componentWilldMount() {\n            this.reqInterceptor = axios.interceptors.response.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.request.eject(this.resInterceptor);\n        }\n\n        errorConfirmHandler = () => {\n            this.setState({error: null});\n        }\n\n        render() {\n            return (\n                <Fragment>\n                    <Modal show={this.state.error} modalClose={this.errorConfirmHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Fragment>\n            );\n        }\n    }\n    \n};\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport { fetchOrders } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let orders = this.props.loading ? \n            <Spinner /> :\n            (\n                <div>\n                {this.props.orders.map(order => (\n                    <Order\n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n                </div>\n            );\n            \n        return orders;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(fetchOrders(token, userId))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n","import { PURCHASE_BURGER_SUCCESS, PURCHASE_BURGER_FAILED,\n    PURCHASE_BURGER_START, PURCHASE_INIT, FETCH_ORDERS_START,\n    FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAILED } from '../actions/actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: PURCHASE_BURGER_SUCCESS,\n        id: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFailed = (error) => {\n    return {\n        type: PURCHASE_BURGER_FAILED,\n        error: error\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post(`/orders.json?auth=${token}`, orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            }).catch(e => {\n                dispatch(purchaseBurgerFailed(e));\n            });\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFailed = (error) => {\n    return {\n        type: FETCH_ORDERS_FAILED,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = `auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n        axios.get(`/orders.json?auth=${token}?${queryParams}`)\n            .then(response => {\n                const fetchOrders = [];\n                for (let key in response.data) {\n                    fetchOrders.push({\n                        ...response.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchOrders));\n            }).catch(e => {\n                dispatch(fetchOrdersFailed(e));\n            });\n    };\n};","export const updateObject = (oldObject, newObject) => {\n    return {\n        ...oldObject,\n        ...newObject\n    };\n};\n\nexport const checkValidation = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = ({children, clicked, type = 'Success', disabled}) => (\n    <button\n        className={[classes.Button, classes[type]].join(' ')}\n        onClick={clicked}\n        disabled={disabled}>\n            {children}\n    </button>\n);\n\nexport default Button;","import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = ({elementType, elementConfig, value, label, changed, invalid, shouldValidate = false, touched, autocomplete=\"off\"}) => {\n    let inputElement = [null];\n    const inputCLasses = [classes.InputElement];\n    let validationError = null;\n\n    if (invalid && shouldValidate && touched) {\n        inputCLasses.push(classes.Invalid);\n        validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>;\n    }\n\n    switch (elementType) {\n        case ('input'):\n            inputElement = <input\n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                {...elementConfig}\n                                onChange={changed}\n                                autoComplete={autocomplete} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                                className={inputCLasses.join(' ')}\n                                {...elementConfig}\n                                onChange={changed} />\n            break;\n        case ('select'):\n            inputElement = <select\n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                onChange={changed}>\n                                    {elementConfig.options.map(option => (\n                                        <option \n                                            value={option.value}\n                                            key={option.value}>\n                                                {option.display}\n                                        </option>\n                                    ))}\n                            </select>\n            break;\n        default:\n            inputElement = <input \n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                {...elementConfig}\n                                onChange={changed}\n                                autoComplete={autocomplete}  />\n    }\n\n    const labelElemtn = label ? <label className={inputCLasses.join(' ')}>{label}</label> : null;\n    return (\n        <div className={classes.Input}>\n            {labelElemtn}\n            {inputElement}\n            {validationError}\n        </div>\n    );\n};\n\nexport default Input;","import React, { Component } from 'react';\nimport classes from './Auth.module.css';\n\nimport { updateObject, checkValidation } from '../../shared/utility';\n\nimport Button  from '../../components/UI/Button/Button';\nimport Input from '../../components//UI/Input/Input';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport { auth } from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setRedirectPath } from '../../store/actions/auth';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    };\n\n    componentDidMount() {\n        if (!this.props.building && this.props.redirectPath !== '/') {\n            this.props.onSetRedirectPath();\n        }\n    }\n\n    inputChangeHandler = (event, controlName) => {\n        const updatedControls = updateObject(this.state.controls, {\n            [controlName]: updateObject(this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidation(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            })\n        });\n\n        this.setState({ controls: updatedControls });\n    };\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\n    };\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return { isSignup: !prevState.isSignup }\n        });\n    };\n\n    render() {\n        const formElements = [];\n        for (let key in this.state.controls) {\n            formElements.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        const form = this.props.loading ? <Spinner /> : formElements.map(formElement => (\n            <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                changed={(event) => this.inputChangeHandler(event, formElement.id)}\n                touched={formElement.config.touched}\n                shouldValidate={formElement.config.validation}\n                autocomplete='on' />\n        ));\n\n        const errorMessage = this.props.error ? <p>{this.props.error.message}</p>: null;\n\n        const authRedirect = this.props.isAuth ? <Redirect to={this.props.redirectPath} /> : null;\n\n        return(\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button>SUBMIT</Button>\n                </form>\n                <Button\n                    clicked={this.switchAuthModeHandler}\n                    type='Danger'>SWITCH TO {this.state.isSignup ? 'SIGN UP' : 'SIGN IN'}</Button>\n            </div>\n        )\n    }\n}\n\nconst matStateToProps = state => {\n    return {\n        loading: state.auth.isLoading,\n        error: state.auth.error,\n        isAuth: state.auth.token !== null,\n        building: state.burgerBuilder.building,\n        redirectPath: state.auth.redirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(auth(email, password, isSignup)),\n        onSetRedirectPath: () => dispatch(setRedirectPath('/'))\n    };\n};\n\nexport default connect(matStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\nimport classes from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nconst BurgerIngredient = (props) => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seed1}></div>\n                    <div className={classes.Seed2}></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>\n            break;\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>\n            break;\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>\n            break;\n        default:\n            ingredient = null;\n    }\n\n    return ingredient;\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst Burger = ({ingredients}) => {\n    let transformedIngredients = Object.keys(ingredients)\n        .map(key => {\n            return [...Array(ingredients[key])].map((_, i) => {\n                return <BurgerIngredient key={key + i} type={key} />\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients</p>\n    }\n    \n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type='bread-top' />\n            {transformedIngredients}\n            <BurgerIngredient type='bread-bottom' />\n        </div>\n    );\n};\n\nexport default Burger;\n","import React from 'react';\nimport classes from './CheckoutSummary.module.css';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nconst CheckoutSummary = ({ingredients, checkoutCancel, checkoutContinue}) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={ingredients} />\n            </div>\n            <Button\n                type='Danger'\n                clicked={checkoutCancel}>CANCEL</Button>\n            <Button\n                clicked={checkoutContinue}>CONTINUE</Button>\n        </div>\n    );\n};\n\nexport default CheckoutSummary;","import React, { Component } from 'react';\nimport axios from '../../../axios-orders';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { purchaseBurger } from '../../../store/actions/index';\n\nimport { updateObject, checkValidation } from '../../../shared/utility';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deleveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {\n                            value: 'fastest',\n                            display: 'Fastest'\n                        },\n                        {\n                            value: 'cheapest',\n                            display: 'Cheapest'\n                        }\n                    ]\n                },\n                valid: true,\n                value: 'fastest',\n            },\n        },\n        formIsValid: false\n    };\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.totalPrice,\n            orderData: formData,\n            userId: this.props.userId\n        };\n        \n        this.props.onOrderBurger(order, this.props.token);\n    };\n\n    inputChangeHandler = (event, inputIdentifier) => {\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidation(event.target.value,\n                this.state.orderForm[inputIdentifier].validation),\n            touched: true\n        });\n\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        });\n\n        let formIsValid = true;\n        for (let inpuIdentifiers in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inpuIdentifiers].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    };\n\n    render() {\n\n        const formElements = [];\n\n        for (let key in this.state.orderForm) {\n            formElements.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElements.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        changed={(event) => this.inputChangeHandler(event, formElement.id)}\n                        touched={formElement.config.touched}\n                        shouldValidate={formElement.config.validation} />\n                ))}\n                <Button disabled={!this.state.formIsValid}>Order</Button>\n            </form>\n        );\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n        return(\n            <div className={classes.ContactData}>\n                <h4>Enter Your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(purchaseBurger(orderData, token))\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCancelHandler = () => {\n        this.props.history.goBack();\n    };\n\n    checkoutContinueHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    };\n\n    render() {\n        let summary = <Redirect to=\"/\" />\n\n        if (this.props.ingredients) {\n            const purchaseRedirect = this.props.purchased ? <Redirect to='/' /> : null;\n            summary = (\n                <div>\n                    {purchaseRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ingredients}\n                        checkoutCancel={this.checkoutCancelHandler}\n                        checkoutContinue={this.checkoutContinueHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    };\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport classes from './BuildControl.module.css';\n\nconst BuildControl = ({label, add, remove, disabled}) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{label}</div>\n        <button\n            className={classes.Less}\n            onClick={remove}\n            disabled={disabled}>Less</button>\n        <button\n            className={classes.More}\n            onClick={add}>More</button>\n    </div>\n);\n\nexport default BuildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' }\n];\n\nconst BuildControls = ({\n    ingredientAdded,\n    ingredientRemoved,\n    disabled,\n    price,\n    purchasable,\n    ordered,\n    isAuth\n}) => {\n    return (\n        <div className={classes.BuildControls}>\n            <p>Current Price: <strong>{price.toFixed(2)}</strong></p>\n            {controls.map(control => (\n                <BuildControl\n                    key={control.label}\n                    label={control.label}\n                    add={() => ingredientAdded(control.type)}\n                    remove={() => ingredientRemoved(control.type)}\n                    disabled={disabled[control.type]} />\n            ))}\n            <button\n                disabled={!purchasable}\n                className={classes.OrderButton}\n                onClick={ordered}>{isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n        </div>\n    );\n};\n\nexport default BuildControls;","import React, { Fragment } from 'react';\nimport Button from '../../UI/Button/Button';\n\nconst OrderSummary = ({\n    ingredients,\n    purchaseCancel,\n    purchaseContinue,\n    price\n}) => {\n    const ingredientsSummary = Object.keys(ingredients)\n        .map(key => (\n            <li key={key}>\n                <span style={{'textTransform': 'capitalize'}}>{key}</span>: {ingredients[key]}\n            </li>\n        ));\n    return (\n        <Fragment>\n            <h3>Your Order</h3>\n            <p>A delicious Burguer with the following ingredients:</p>\n            <ul>\n                {ingredientsSummary}\n            </ul>\n            <p><strong>TOTAL PRICE: {price.toFixed(2)}</strong></p>\n            <p>Continue to checkout</p>\n            <Button type='Danger' clicked={purchaseCancel}>CANCEL</Button>\n            <Button clicked={purchaseContinue}>CONTINUE</Button>\n        </Fragment>\n    );\n};\n\nexport default OrderSummary;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport { addIngredient, removeIngredient, getIngredients, purchaseInit } from '../../store/actions/index';\nimport { setRedirectPath } from '../../store/actions/auth';\n\nexport class BurgerBuilder extends Component {\n    state = {\n        pusrchasing: false,\n    };\n\n    componentDidMount() {\n        this.props.getIngredients();\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(key => ingredients[key])\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        return sum > 0;\n    };\n\n    purchaseHandler = () => {\n        if (this.props.isAuth) {\n            this.setState({pusrchasing: true});\n        } else {\n            this.props.onSetRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n        \n    };\n\n    purchaseCancelHandler = () => {\n        this.setState({pusrchasing: false});\n    };\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    };\n\n    render() {\n        const disableInfo = {\n            ...this.props.ingredients\n        };\n\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n\n        let orderSummary = this.props.ingredients ?\n                <OrderSummary\n                    ingredients={this.props.ingredients}\n                    purchaseCancel={this.purchaseCancelHandler}\n                    purchaseContinue={this.purchaseContinueHandler}\n                    price={this.props.totalPrice} /> :\n                    null;\n\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if (this.props.ingredients) {\n            burger = (\n                <Fragment>\n                    <Burger ingredients={this.props.ingredients} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disableInfo}\n                        purchasable={this.updatePurchaseState(this.props.ingredients)}\n                        price={this.props.totalPrice}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuth} />\n                </Fragment>\n            );\n        }\n\n        return (\n            <Fragment>\n                <Modal show={this.state.pusrchasing} modalClose={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuth: state.auth.token !== null\n    };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (name) => dispatch(addIngredient(name)),\n        onIngredientRemoved: (name) => dispatch(removeIngredient(name)),\n        getIngredients: () => dispatch(getIngredients()),\n        onInitPurchase: () => dispatch(purchaseInit()),\n        onSetRedirectPath: (path) => dispatch(setRedirectPath(path))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import { ADD_INGREDIENT, REMOVE_INGREDIENT, SET_INGREDIENTS, FETCH_INGREDIENTS_FAILED } from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: ADD_INGREDIENT,\n        ingredientName: name\n    }\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n};\n\nconst setIngredients = (ingredients) => {\n    return {\n        type: SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nconst fetchIngredientsFailed = () => {\n    return {\n        type: FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const getIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json').then(resp => {\n            dispatch(setIngredients(resp.data));\n        }).catch(() => {\n            dispatch(fetchIngredientsFailed());\n        });\n    };\n};","import React, { Component } from 'react';\n\nimport Layout from './containers/Layout/Layout';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Checkout from './containers/Checkout/Checkout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authCheckState } from './store/actions';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  render() {\n\n    let routes = [];\n    if (this.props.isAuth) {\n      routes.push(\n        {\n          path: '/checkout',\n          component: Checkout\n        },\n        {\n          path: '/orders',\n          component: Orders\n        },\n        {\n          path: '/logout',\n          component: Logout\n        }\n      );\n    }\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            {routes.map(route => (\n              <Route path={route.path} component={route.component} key={route.path} />\n            ))}\n            <Route path='/auth' component={Auth} />\n            <Route path='/' exact component={BurgerBuilder} />\n            <Redirect to='/' />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    };\n    return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    };\n    return updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);   \n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return updateObject(state, {error: true, building: false});\n        default: return state;\n    }\n};\n\nexport default reducer;","import { PURCHASE_BURGER_SUCCESS, PURCHASE_BURGER_FAILED, PURCHASE_BURGER_START, PURCHASE_INIT, FETCH_ORDERS_START, FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAILED } from '../actions/actionTypes';\nimport { updateObject } from '../../shared//utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PURCHASE_INIT:\n            return updateObject(state, { purchased: false});\n        case PURCHASE_BURGER_START:\n            return  updateObject(state, { loading: true });\n        case PURCHASE_BURGER_SUCCESS:\n            const newOrder = updateObject(action.orderData, { id: action.id });\n            return updateObject(state, {\n                loading: false,\n                orders: state.orders.concat(newOrder),\n                purchased: true\n            });\n        case PURCHASE_BURGER_FAILED:\n            return updateObject(state, { loading: false });\n        case FETCH_ORDERS_START:\n            return updateObject(state, { loading: true });\n        case FETCH_ORDERS_SUCCESS:\n            return updateObject(state, {\n                orders: action.orders,\n                loading: false\n            });\n        case FETCH_ORDERS_FAILED:\n            return updateObject(state, { loading: false });\n        default:\n            return state;\n    };\n};\n\nexport default reducer;","import {  AUTH_START, AUTH_FAILED, AUTH_SUCCESS, AUTH_LOGOUT, SET_AUTH_REDIRECT } from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    isLoading: false,\n    redirectPath: '/'\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case AUTH_START:\n            return updateObject(state, { error: null, isLoading: true });\n        case AUTH_SUCCESS:\n            return updateObject(state, {\n                    token: action.token,\n                    userId: action.userId,\n                    error: null,\n                    isLoading: false\n                }\n            );\n        case AUTH_FAILED:\n            return updateObject(state, { error: action.error, isLoading: false});\n        case AUTH_LOGOUT:\n            return updateObject(state, { token: null, userId: null });\n        case SET_AUTH_REDIRECT:\n            return updateObject(state, { redirectPath: action.path });\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}