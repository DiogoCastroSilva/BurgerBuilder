{"ast":null,"code":"import React from'react';import classes from'./Input.module.css';var Input=function Input(_ref){var elementType=_ref.elementType,elementConfig=_ref.elementConfig,value=_ref.value,label=_ref.label,changed=_ref.changed,invalid=_ref.invalid,_ref$shouldValidate=_ref.shouldValidate,shouldValidate=_ref$shouldValidate===void 0?false:_ref$shouldValidate,touched=_ref.touched,_ref$autocomplete=_ref.autocomplete,autocomplete=_ref$autocomplete===void 0?\"off\":_ref$autocomplete;var inputElement=[null];var inputCLasses=[classes.InputElement];var validationError=null;if(invalid&&shouldValidate&&touched){inputCLasses.push(classes.Invalid);validationError=React.createElement(\"p\",{className:classes.ValidationError},\"Please enter a valid value!\");}switch(elementType){case'input':inputElement=React.createElement(\"input\",Object.assign({className:inputCLasses.join(' '),value:value},elementConfig,{onChange:changed,autoComplete:autocomplete}));break;case'textarea':inputElement=React.createElement(\"textarea\",Object.assign({className:inputCLasses.join(' ')},elementConfig,{onChange:changed}));break;case'select':inputElement=React.createElement(\"select\",{className:inputCLasses.join(' '),value:value,onChange:changed},elementConfig.options.map(function(option){return React.createElement(\"option\",{value:option.value,key:option.value},option.display);}));break;default:inputElement=React.createElement(\"input\",Object.assign({className:inputCLasses.join(' '),value:value},elementConfig,{onChange:changed,autoComplete:autocomplete}));}var labelElemtn=label?React.createElement(\"label\",{className:inputCLasses.join(' ')},label):null;return React.createElement(\"div\",{className:classes.Input},labelElemtn,inputElement,validationError);};export default Input;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/components/UI/Input/Input.js"],"names":["React","classes","Input","elementType","elementConfig","value","label","changed","invalid","shouldValidate","touched","autocomplete","inputElement","inputCLasses","InputElement","validationError","push","Invalid","ValidationError","join","options","map","option","display","labelElemtn"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAuH,IAArHC,CAAAA,WAAqH,MAArHA,WAAqH,CAAxGC,aAAwG,MAAxGA,aAAwG,CAAzFC,KAAyF,MAAzFA,KAAyF,CAAlFC,KAAkF,MAAlFA,KAAkF,CAA3EC,OAA2E,MAA3EA,OAA2E,CAAlEC,OAAkE,MAAlEA,OAAkE,0BAAzDC,cAAyD,CAAzDA,cAAyD,8BAAxC,KAAwC,qBAAjCC,OAAiC,MAAjCA,OAAiC,wBAAxBC,YAAwB,CAAxBA,YAAwB,4BAAX,KAAW,mBACjI,GAAIC,CAAAA,YAAY,CAAG,CAAC,IAAD,CAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,CAACZ,OAAO,CAACa,YAAT,CAArB,CACA,GAAIC,CAAAA,eAAe,CAAG,IAAtB,CAEA,GAAIP,OAAO,EAAIC,cAAX,EAA6BC,OAAjC,CAA0C,CACtCG,YAAY,CAACG,IAAb,CAAkBf,OAAO,CAACgB,OAA1B,EACAF,eAAe,CAAG,yBAAG,SAAS,CAAEd,OAAO,CAACiB,eAAtB,gCAAlB,CACH,CAED,OAAQf,WAAR,EACI,IAAM,OAAN,CACIS,YAAY,CAAG,2CACK,SAAS,CAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADhB,CAEK,KAAK,CAAEd,KAFZ,EAGSD,aAHT,EAIK,QAAQ,CAAEG,OAJf,CAKK,YAAY,CAAEI,YALnB,GAAf,CAMA,MACJ,IAAM,UAAN,CACIC,YAAY,CAAG,8CACK,SAAS,CAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADhB,EAESf,aAFT,EAGK,QAAQ,CAAEG,OAHf,GAAf,CAIA,MACJ,IAAM,QAAN,CACIK,YAAY,CAAG,8BACK,SAAS,CAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADhB,CAEK,KAAK,CAAEd,KAFZ,CAGK,QAAQ,CAAEE,OAHf,EAIUH,aAAa,CAACgB,OAAd,CAAsBC,GAAtB,CAA0B,SAAAC,MAAM,QAC7B,+BACI,KAAK,CAAEA,MAAM,CAACjB,KADlB,CAEI,GAAG,CAAEiB,MAAM,CAACjB,KAFhB,EAGSiB,MAAM,CAACC,OAHhB,CAD6B,EAAhC,CAJV,CAAf,CAYA,MACJ,QACIX,YAAY,CAAG,2CACK,SAAS,CAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADhB,CAEK,KAAK,CAAEd,KAFZ,EAGSD,aAHT,EAIK,QAAQ,CAAEG,OAJf,CAKK,YAAY,CAAEI,YALnB,GAAf,CA9BR,CAsCA,GAAMa,CAAAA,WAAW,CAAGlB,KAAK,CAAG,6BAAO,SAAS,CAAEO,YAAY,CAACM,IAAb,CAAkB,GAAlB,CAAlB,EAA2Cb,KAA3C,CAAH,CAA+D,IAAxF,CACA,MACI,4BAAK,SAAS,CAAEL,OAAO,CAACC,KAAxB,EACKsB,WADL,CAEKZ,YAFL,CAGKG,eAHL,CADJ,CAOH,CAxDD,CA0DA,cAAeb,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = ({elementType, elementConfig, value, label, changed, invalid, shouldValidate = false, touched, autocomplete=\"off\"}) => {\n    let inputElement = [null];\n    const inputCLasses = [classes.InputElement];\n    let validationError = null;\n\n    if (invalid && shouldValidate && touched) {\n        inputCLasses.push(classes.Invalid);\n        validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>;\n    }\n\n    switch (elementType) {\n        case ('input'):\n            inputElement = <input\n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                {...elementConfig}\n                                onChange={changed}\n                                autoComplete={autocomplete} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                                className={inputCLasses.join(' ')}\n                                {...elementConfig}\n                                onChange={changed} />\n            break;\n        case ('select'):\n            inputElement = <select\n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                onChange={changed}>\n                                    {elementConfig.options.map(option => (\n                                        <option \n                                            value={option.value}\n                                            key={option.value}>\n                                                {option.display}\n                                        </option>\n                                    ))}\n                            </select>\n            break;\n        default:\n            inputElement = <input \n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                {...elementConfig}\n                                onChange={changed}\n                                autoComplete={autocomplete}  />\n    }\n\n    const labelElemtn = label ? <label className={inputCLasses.join(' ')}>{label}</label> : null;\n    return (\n        <div className={classes.Input}>\n            {labelElemtn}\n            {inputElement}\n            {validationError}\n        </div>\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}