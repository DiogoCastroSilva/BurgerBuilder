{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    bacon: 0,\n    cheese: 0,\n    meat: 0\n  },\n  totalPrice: 4\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","salad","bacon","cheese","meat","totalPrice","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,CADE;AAETC,IAAAA,KAAK,EAAE,CAFE;AAGTC,IAAAA,MAAM,EAAE,CAHC;AAITC,IAAAA,IAAI,EAAE;AAJG,GADI;AAOjBC,EAAAA,UAAU,EAAE;AAPK,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAW,CAACY,cAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHP,QAAAA,WAAW,EAAE,EACT,GAAGO,KAAK,CAACP,WADA;AAET,WAACQ,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACP,WAAN,CAAkBQ,MAAM,CAACG,cAAzB,IAA2C;AAF3D,SAFV;AAMHN,QAAAA,UAAU,EAAEE,KAAK,CAACF;AANf,OAAP;;AAQJ,SAAKP,WAAW,CAACc,iBAAjB;AACI,aAAO,EACH,GAAGL,KADA;AAEHP,QAAAA,WAAW,EAAE,EACT,GAAGO,KAAK,CAACP,WADA;AAET,WAACQ,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACP,WAAN,CAAkBQ,MAAM,CAACG,cAAzB,IAA2C;AAF3D;AAFV,OAAP;;AAOJ;AACI,aAAOJ,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions';\n\nconst initialState = {\n    ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n    },\n    totalPrice: 4,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice \n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}