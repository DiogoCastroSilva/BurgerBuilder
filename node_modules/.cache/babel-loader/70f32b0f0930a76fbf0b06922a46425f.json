{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/containers/Orders/Orders.js\";\nimport React, { useEffect } from 'react';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport { fetchOrders } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nconst Orders = ({\n  onFetchOrders,\n  token,\n  userId,\n  loading,\n  orders\n}) => {\n  useEffect(() => {\n    onFetchOrders(token, userId);\n  }, [onFetchOrders, token, usei]);\n  let hasOrders = loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, orders.map(order => React.createElement(Order, {\n    key: order.id,\n    ingredients: order.ingredients,\n    price: order.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n  return hasOrders;\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/containers/Orders/Orders.js"],"names":["React","useEffect","Order","Spinner","axios","withErrorHandler","fetchOrders","connect","Orders","onFetchOrders","token","userId","loading","orders","usei","hasOrders","map","order","id","ingredients","price","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,MAAvB;AAA+BC,EAAAA,OAA/B;AAAwCC,EAAAA;AAAxC,CAAD,KAAqD;AAEhEZ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,CAAb;AACH,GAFQ,EAEN,CAACF,aAAD,EAAgBC,KAAhB,EAAuBI,IAAvB,CAFM,CAAT;AAIA,MAAIC,SAAS,GAAGH,OAAO,GACnB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADmB,GAGf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCC,MAAM,CAACG,GAAP,CAAWC,KAAK,IACb,oBAAC,KAAD;AACI,IAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,IAAA,WAAW,EAAED,KAAK,CAACE,WAFvB;AAGI,IAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADD,CAHR;AAaA,SAAOL,SAAP;AACH,CApBD;;AAsBA,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHT,IAAAA,MAAM,EAAES,KAAK,CAACL,KAAN,CAAYJ,MADjB;AAEHD,IAAAA,OAAO,EAAEU,KAAK,CAACL,KAAN,CAAYL,OAFlB;AAGHF,IAAAA,KAAK,EAAEY,KAAK,CAACC,IAAN,CAAWb,KAHf;AAIHC,IAAAA,MAAM,EAAEW,KAAK,CAACC,IAAN,CAAWZ;AAJhB,GAAP;AAMH,CAPD;;AAQA,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHhB,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBc,QAAQ,CAACnB,WAAW,CAACI,KAAD,EAAQC,MAAR,CAAZ;AADvC,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAACc,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,gBAAgB,CAACG,MAAD,EAASJ,KAAT,CAA7D,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport { fetchOrders } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nconst Orders = ({onFetchOrders, token, userId, loading, orders}) => {\n\n    useEffect(() => {\n        onFetchOrders(token, userId);\n    }, [onFetchOrders, token, usei]);\n\n    let hasOrders = loading ? \n        <Spinner /> :\n        (\n            <div>\n            {orders.map(order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ))}\n            </div>\n        );\n            \n    return hasOrders;\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(fetchOrders(token, userId))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n"]},"metadata":{},"sourceType":"module"}