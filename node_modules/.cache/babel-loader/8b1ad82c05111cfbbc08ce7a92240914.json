{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utilities/utility';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, act);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      const updatedIng = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n      };\n      const updatedIngs = updateObject(state.ingredients, updatedIng);\n      const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedSt);\n\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/store/reducers/burguerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","reducer","type","ADD_INGREDIENT","act","REMOVE_INGREDIENT","updatedIng","updatedIngs","updatedSt","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAMC,iBAAiB,GAAG;AAAE,KAACD,MAAM,CAACE,cAAR,GAAyBH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C;AAAtE,GAA1B;AACA,QAAMC,kBAAkB,GAAGf,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBW,iBAApB,CAAvC;AACA,QAAMG,YAAY,GAAG;AACjBd,IAAAA,WAAW,EAAEa,kBADI;AAEjBZ,IAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,cAAR;AAF/B,GAArB;AAIA,SAAOd,YAAY,CAACW,KAAD,EAAQK,YAAR,CAAnB;AACH,CARD;;AAUA,MAAMC,OAAO,GAAG,CAACN,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACM,IAAd;AACI,SAAKnB,WAAW,CAACoB,cAAjB;AACI,aAAOT,aAAa,CAACC,KAAD,EAAQS,GAAR,CAApB;;AACJ,SAAKrB,WAAW,CAACsB,iBAAjB;AACI,YAAMC,UAAU,GAAG;AAAE,SAACV,MAAM,CAACE,cAAR,GAAyBH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C;AAAtE,OAAnB;AACA,YAAMS,WAAW,GAAGvB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBoB,UAApB,CAAhC;AACA,YAAME,SAAS,GAAG;AACdtB,QAAAA,WAAW,EAAEqB,WADC;AAEdpB,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,cAAR;AAFlC,OAAlB;AAIA,aAAOd,YAAY,CAACW,KAAD,EAAQa,SAAR,CAAnB;;AACJ,SAAKzB,WAAW,CAAC0B,eAAjB;AACI,aAAOzB,YAAY,CAACW,KAAD,EAAQ;AACvBT,QAAAA,WAAW,EAAE;AACTI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADjB;AAETG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFjB;AAGTF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHlB;AAITC,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJhB,SADU;AAOvBL,QAAAA,UAAU,EAAE,CAPW;AAQvBC,QAAAA,KAAK,EAAE;AARgB,OAAR,CAAnB;;AAUJ,SAAKL,WAAW,CAAC2B,wBAAjB;AACI,aAAO1B,YAAY,CAACW,KAAD,EAAQ;AAACP,QAAAA,KAAK,EAAE;AAAR,OAAR,CAAnB;;AACJ;AACI,aAAOO,KAAP;AAzBR;AA2BH,CA5BD;;AA8BA,eAAeM,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utilities/utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    };\n    return updateObject(state, updatedState);\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return addIngredient(state, act);\n        case actionTypes.REMOVE_INGREDIENT:\n            const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\n            const updatedIngs = updateObject(state.ingredients, updatedIng);\n            const updatedSt = {\n                ingredients: updatedIngs,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            };\n            return updateObject(state, updatedSt);\n        case actionTypes.SET_INGREDIENTS:\n            return updateObject(state, {\n                ingredients: {\n                    salad: action.ingredients.salad,\n                    bacon: action.ingredients.bacon,\n                    cheese: action.ingredients.cheese,\n                    meat: action.ingredients.meat\n                },\n                totalPrice: 4,\n                error: false\n            });\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return updateObject(state, {error: true});\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}