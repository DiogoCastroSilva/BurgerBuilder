{"ast":null,"code":"import _defineProperty from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'../../../axios-orders';import Button from'../../../components/UI/Button/Button';import classes from'./ContactData.module.css';import Spinner from'../../../components/UI/Spinner/Spinner';import Input from'../../../components/UI/Input/Input';import{connect}from'react-redux';import withErrorHandler from'../../hoc/withErrorHandler/withErrorHandler';import{purchaseBurger}from'../../../store/actions/index';import{updateObject,checkValidation}from'../../../shared/utility';var ContactData=/*#__PURE__*/function(_Component){_inherits(ContactData,_Component);function ContactData(){var _getPrototypeOf2;var _this;_classCallCheck(this,ContactData);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={orderForm:{name:{elementType:'input',elementConfig:{type:'text',placeholder:'Your name'},value:'',validation:{required:true},valid:false,touched:false},street:{elementType:'input',elementConfig:{type:'text',placeholder:'Street'},value:'',validation:{required:true},valid:false,touched:false},zipCode:{elementType:'input',elementConfig:{type:'text',placeholder:'ZIP Code'},value:'',validation:{required:true,minLength:5,maxLength:5,isNumeric:true},valid:false,touched:false},country:{elementType:'input',elementConfig:{type:'text',placeholder:'Country'},value:'',validation:{required:true},valid:false,touched:false},email:{elementType:'input',elementConfig:{type:'email',placeholder:'Your E-Mail'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},deleveryMethod:{elementType:'select',elementConfig:{options:[{value:'fastest',display:'Fastest'},{value:'cheapest',display:'Cheapest'}]},valid:true,value:'fastest'}},formIsValid:false};_this.orderHandler=function(event){event.preventDefault();var formData={};for(var formElementIdentifier in _this.state.orderForm){formData[formElementIdentifier]=_this.state.orderForm[formElementIdentifier].value;}var order={ingredients:_this.props.ingredients,price:_this.props.totalPrice,orderData:formData,userId:_this.props.userId};_this.props.onOrderBurger(order,_this.props.token);};_this.inputChangeHandler=function(event,inputIdentifier){var updatedFormElement=updateObject(_this.state.orderForm[inputIdentifier],{value:event.target.value,valid:checkValidation(event.target.value,_this.state.orderForm[inputIdentifier].validation),touched:true});var updatedOrderForm=updateObject(_this.state.orderForm,_defineProperty({},inputIdentifier,updatedFormElement));var formIsValid=true;for(var inpuIdentifiers in updatedOrderForm){formIsValid=updatedOrderForm[inpuIdentifiers].valid&&formIsValid;}_this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});};return _this;}_createClass(ContactData,[{key:\"render\",value:function render(){var _this2=this;var formElements=[];for(var key in this.state.orderForm){formElements.push({id:key,config:this.state.orderForm[key]});}var form=React.createElement(\"form\",{onSubmit:this.orderHandler},formElements.map(function(formElement){return React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,changed:function changed(event){return _this2.inputChangeHandler(event,formElement.id);},touched:formElement.config.touched,shouldValidate:formElement.config.validation});}),React.createElement(Button,{disabled:!this.state.formIsValid},\"Order\"));if(this.props.loading){form=React.createElement(Spinner,null);}return React.createElement(\"div\",{className:classes.ContactData},React.createElement(\"h4\",null,\"Enter Your Contact Data\"),form);}}]);return ContactData;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onOrderBurger:function onOrderBurger(orderData,token){return dispatch(purchaseBurger(orderData,token));}};};var mapStateToProps=function mapStateToProps(state){return{ingredients:state.burgerBuilder.ingredients,totalPrice:state.burgerBuilder.totalPrice,loading:state.order.loading,token:state.auth.token,userId:state.auth.userId};};export default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","axios","Button","classes","Spinner","Input","connect","withErrorHandler","purchaseBurger","updateObject","checkValidation","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deleveryMethod","options","display","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ingredients","props","price","totalPrice","orderData","userId","onOrderBurger","token","inputChangeHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","inpuIdentifiers","setState","formElements","key","push","id","config","form","map","formElement","loading","mapDispatchToProps","dispatch","mapStateToProps","burgerBuilder","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../../axios-orders';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { purchaseBurger } from '../../../store/actions/index';\n\nimport { updateObject, checkValidation } from '../../../shared/utility';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deleveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {\n                            value: 'fastest',\n                            display: 'Fastest'\n                        },\n                        {\n                            value: 'cheapest',\n                            display: 'Cheapest'\n                        }\n                    ]\n                },\n                valid: true,\n                value: 'fastest',\n            },\n        },\n        formIsValid: false\n    };\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.totalPrice,\n            orderData: formData,\n            userId: this.props.userId\n        };\n        \n        this.props.onOrderBurger(order, this.props.token);\n    };\n\n    inputChangeHandler = (event, inputIdentifier) => {\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidation(event.target.value,\n                this.state.orderForm[inputIdentifier].validation),\n            touched: true\n        });\n\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        });\n\n        let formIsValid = true;\n        for (let inpuIdentifiers in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inpuIdentifiers].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    };\n\n    render() {\n\n        const formElements = [];\n\n        for (let key in this.state.orderForm) {\n            formElements.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElements.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        changed={(event) => this.inputChangeHandler(event, formElement.id)}\n                        touched={formElement.config.touched}\n                        shouldValidate={formElement.config.validation} />\n                ))}\n                <Button disabled={!this.state.formIsValid}>Order</Button>\n            </form>\n        );\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n        return(\n            <div className={classes.ContactData}>\n                <h4>Enter Your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(purchaseBurger(orderData, token))\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));"]},"metadata":{},"sourceType":"module"}