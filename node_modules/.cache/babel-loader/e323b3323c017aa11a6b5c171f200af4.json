{"ast":null,"code":"import _classCallCheck from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Layout from'./containers/Layout/Layout';import Logout from'./containers/Auth/Logout/Logout';import BurgerBuilder from'./containers/BurgerBuilder/BurgerBuilder';import asyncComponent from'./containers/hoc/asyncComponent/asyncComponent';import{Route,Switch,withRouter,Redirect}from'react-router-dom';import{connect}from'react-redux';import{authCheckState}from'./store/actions';var asyncCheckout=asyncComponent(function(){return import('./containers/Checkout/Checkout');});var asyncOrders=asyncComponent(function(){return import('./containers/Orders/Orders');});var asyncAuth=asyncComponent(function(){return import('./containers/Auth/Auth');});var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){_classCallCheck(this,App);return _possibleConstructorReturn(this,_getPrototypeOf(App).apply(this,arguments));}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.onTryAutoSignUp();}},{key:\"render\",value:function render(){var routes=[];if(this.props.isAuth){routes.push({path:'/checkout',component:asyncCheckout},{path:'/orders',component:asyncOrders},{path:'/logout',component:Logout});}return React.createElement(\"div\",null,React.createElement(Layout,null,React.createElement(Switch,null,routes.map(function(route){return React.createElement(Route,{path:route.path,component:route.component,key:route.path});}),React.createElement(Route,{path:\"/auth\",component:asyncAuth}),React.createElement(Route,{path:\"/\",exact:true,component:BurgerBuilder}),React.createElement(Redirect,{to:\"/\"}))));}}]);return App;}(Component);;var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.token!==null};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onTryAutoSignUp:function onTryAutoSignUp(){return dispatch(authCheckState());}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/App.js"],"names":["React","Component","Layout","Logout","BurgerBuilder","asyncComponent","Route","Switch","withRouter","Redirect","connect","authCheckState","asyncCheckout","asyncOrders","asyncAuth","App","props","onTryAutoSignUp","routes","isAuth","push","path","component","map","route","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch"],"mappings":"k0BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iCAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,0CAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,gDAA3B,CAEA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,UAAxB,CAAoCC,QAApC,KAAoD,kBAApD,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,KAA+B,iBAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAGP,cAAc,CAAC,iBAAM,QAAO,gCAAP,CAAN,EAAD,CAApC,CACA,GAAMQ,CAAAA,WAAW,CAAGR,cAAc,CAAC,iBAAM,QAAO,4BAAP,CAAN,EAAD,CAAlC,CACA,GAAMS,CAAAA,SAAS,CAAGT,cAAc,CAAC,iBAAM,QAAO,wBAAP,CAAN,EAAD,CAAhC,C,GAEMU,CAAAA,G,uQAEgB,CAClB,KAAKC,KAAL,CAAWC,eAAX,GACD,C,uCAEQ,CAEP,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAI,KAAKF,KAAL,CAAWG,MAAf,CAAuB,CACrBD,MAAM,CAACE,IAAP,CACE,CACEC,IAAI,CAAE,WADR,CAEEC,SAAS,CAAEV,aAFb,CADF,CAKE,CACES,IAAI,CAAE,SADR,CAEEC,SAAS,CAAET,WAFb,CALF,CASE,CACEQ,IAAI,CAAE,SADR,CAEEC,SAAS,CAAEnB,MAFb,CATF,EAcD,CACD,MACE,gCACE,oBAAC,MAAD,MACE,oBAAC,MAAD,MACGe,MAAM,CAACK,GAAP,CAAW,SAAAC,KAAK,QACf,qBAAC,KAAD,EAAO,IAAI,CAAEA,KAAK,CAACH,IAAnB,CAAyB,SAAS,CAAEG,KAAK,CAACF,SAA1C,CAAqD,GAAG,CAAEE,KAAK,CAACH,IAAhE,EADe,EAAhB,CADH,CAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAEP,SAA/B,EAJF,CAKE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,CAAsB,SAAS,CAAEV,aAAjC,EALF,CAME,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EANF,CADF,CADF,CADF,CAcD,C,iBAvCeH,S,EAwCjB,CAED,GAAMwB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC/B,MAAO,CACLP,MAAM,CAAEO,KAAK,CAACC,IAAN,CAAWC,KAAX,GAAqB,IADxB,CAAP,CAGD,CAJD,CAMA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACrC,MAAO,CACLb,eAAe,CAAE,iCAAMa,CAAAA,QAAQ,CAACnB,cAAc,EAAf,CAAd,EADZ,CAAP,CAGD,CAJD,CAMA,cAAeH,CAAAA,UAAU,CAACE,OAAO,CAACe,eAAD,CAAkBI,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\n\nimport Layout from './containers/Layout/Layout';\nimport Logout from './containers/Auth/Logout/Logout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport asyncComponent from './containers/hoc/asyncComponent/asyncComponent';\n\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authCheckState } from './store/actions';\n\nconst asyncCheckout = asyncComponent(() => import('./containers/Checkout/Checkout'));\nconst asyncOrders = asyncComponent(() => import('./containers/Orders/Orders'));\nconst asyncAuth = asyncComponent(() => import('./containers/Auth/Auth'));\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  render() {\n\n    let routes = [];\n    if (this.props.isAuth) {\n      routes.push(\n        {\n          path: '/checkout',\n          component: asyncCheckout\n        },\n        {\n          path: '/orders',\n          component: asyncOrders\n        },\n        {\n          path: '/logout',\n          component: Logout\n        }\n      );\n    }\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            {routes.map(route => (\n              <Route path={route.path} component={route.component} key={route.path} />\n            ))}\n            <Route path='/auth' component={asyncAuth} />\n            <Route path='/' exact component={BurgerBuilder} />\n            <Redirect to='/' />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}