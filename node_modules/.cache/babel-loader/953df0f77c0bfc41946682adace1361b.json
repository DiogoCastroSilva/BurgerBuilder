{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchAuth, watchBurgerBuilder, watchOrder } from './store/sagas/index';\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(thunk, sagaMiddleware));\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchBurgerBuilder);\nsagaMiddleware.run(watchOrder);\nconst app = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n})));\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Provider","createStore","applyMiddleware","combineReducers","burgerBuilderReducer","orderReducer","authReducer","thunk","createSagaMiddleware","watchAuth","watchBurgerBuilder","watchOrder","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","burgerBuilder","order","auth","sagaMiddleware","store","run","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,SAAT,EAAoBC,kBAApB,EAAwCC,UAAxC,QAA0D,qBAA1D;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,QAAQC,OAAxH;AAEA,MAAMC,WAAW,GAAGhB,eAAe,CAAC;AAChCiB,EAAAA,aAAa,EAAEhB,oBADiB;AAEhCiB,EAAAA,KAAK,EAAEhB,YAFyB;AAGhCiB,EAAAA,IAAI,EAAEhB;AAH0B,CAAD,CAAnC;AAMA,MAAMiB,cAAc,GAAGf,oBAAoB,EAA3C;AAEA,MAAMgB,KAAK,GAAGvB,WAAW,CAACkB,WAAD,EAAcjB,eAAe,CAACK,KAAD,EAAQgB,cAAR,CAA7B,CAAzB;AAEAA,cAAc,CAACE,GAAf,CAAmBhB,SAAnB;AACAc,cAAc,CAACE,GAAf,CAAmBf,kBAAnB;AACAa,cAAc,CAACE,GAAf,CAAmBd,UAAnB;AAEA,MAAMe,GAAG,GACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ;AAOA5B,QAAQ,CAAC+B,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;;AACA/B,aAAa,CAACgC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport {Â createStore, applyMiddleware, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchAuth, watchBurgerBuilder, watchOrder } from './store/sagas/index';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, sagaMiddleware));\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchBurgerBuilder);\nsagaMiddleware.run(watchOrder);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}