{"ast":null,"code":"import axios from 'axios';\nimport { AUTH_START, AUTH_FAILED, AUTH_SUCCESS } from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const authFailed = error => {\n  return {\n    type: AUTH_FAILED,\n    error: error\n  };\n};\nexport const auth = (email, password, isSignup = false) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = isSignup ? 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8' : 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8';\n    axios.post(url, authData).then(resp => {\n      dispatch(authSuccess(resp.data));\n    }).catch(e => {\n      console.log(e);\n      dispatch(authFailed(e));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/store/actions/auth.js"],"names":["axios","AUTH_START","AUTH_FAILED","AUTH_SUCCESS","authStart","type","authSuccess","token","userId","authFailed","error","auth","email","password","isSignup","dispatch","authData","returnSecureToken","url","post","then","resp","data","catch","e","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,YAAlC,QAAsD,eAAtD;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHH,IAAAA,IAAI,EAAEF,YADH;AAEHI,IAAAA,KAAK,EAAEA,KAFJ;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHL,IAAAA,IAAI,EAAEH,WADH;AAEHQ,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAQ,GAAG,KAA7B,KAAuC;AACvD,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACA,UAAMY,QAAQ,GAAG;AACbJ,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbI,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAMA,QAAIC,GAAG,GAAGJ,QAAQ,GACd,mHADc,GAEd,uGAFJ;AAIAd,IAAAA,KAAK,CAACmB,IAAN,CAAWD,GAAX,EAAgBF,QAAhB,EACKI,IADL,CACUC,IAAI,IAAI;AACVN,MAAAA,QAAQ,CAACT,WAAW,CAACe,IAAI,CAACC,IAAN,CAAZ,CAAR;AACH,KAHL,EAIKC,KAJL,CAIWC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAT,MAAAA,QAAQ,CAACN,UAAU,CAACe,CAAD,CAAX,CAAR;AACH,KAPL;AAQH,GApBD;AAqBH,CAtBM","sourcesContent":["import axios from 'axios';\nimport { AUTH_START, AUTH_FAILED, AUTH_SUCCESS } from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: AUTH_START\n    }\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: AUTH_SUCCESS,\n        token: token,\n        userId: userId\n    }\n};\n\nexport const authFailed = (error) => {\n    return {\n        type: AUTH_FAILED,\n        error: error\n    };\n};\n\nexport const auth = (email, password, isSignup = false) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n\n        let url = isSignup ?\n            'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8' :\n            'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8';\n\n        axios.post(url, authData)\n            .then(resp => {\n                dispatch(authSuccess(resp.data))\n            })\n            .catch(e => {\n                console.log(e);\n                dispatch(authFailed(e));\n            });\n    };\n};"]},"metadata":{},"sourceType":"module"}