{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/the-burguer-builder/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = ({\n  elementType,\n  elementConfig,\n  value,\n  label,\n  changed,\n  invalid,\n  shouldValidate = false,\n  touched\n}) => {\n  let inputElement = [null];\n  const inputCLasses = [classes.InputElement];\n  let validationError = null;\n\n  if (invalid && shouldValidate && touched) {\n    inputCLasses.push(classes.Invalid);\n    validationError = React.createElement(\"p\", {\n      className: classes.ValidationError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Please enter a valid value!\");\n  }\n\n  switch (elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: inputCLasses.join(' '),\n        value: value\n      }, elementConfig, {\n        onChange: changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: inputCLasses.join(' ')\n      }, elementConfig, {\n        onChange: changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        className: inputCLasses.join(' '),\n        value: value,\n        onChange: changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, elementConfig.options.map(option => React.createElement(\"option\", {\n        value: option.value,\n        key: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, option.display)));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: inputCLasses.join(' '),\n        value: value\n      }, elementConfig, {\n        onChange: changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n  }\n\n  const labelElemtn = label ? React.createElement(\"label\", {\n    className: inputCLasses.join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, label) : null;\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, labelElemtn, inputElement, validationError);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/components/UI/Input/Input.js"],"names":["React","classes","Input","elementType","elementConfig","value","label","changed","invalid","shouldValidate","touched","inputElement","inputCLasses","InputElement","validationError","push","Invalid","ValidationError","join","options","map","option","display","labelElemtn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA,KAApC;AAA2CC,EAAAA,OAA3C;AAAoDC,EAAAA,OAApD;AAA6DC,EAAAA,cAAc,GAAG,KAA9E;AAAqFC,EAAAA;AAArF,CAAD,KAAmG;AAC7G,MAAIC,YAAY,GAAG,CAAC,IAAD,CAAnB;AACA,QAAMC,YAAY,GAAG,CAACX,OAAO,CAACY,YAAT,CAArB;AACA,MAAIC,eAAe,GAAG,IAAtB;;AAEA,MAAIN,OAAO,IAAIC,cAAX,IAA6BC,OAAjC,EAA0C;AACtCE,IAAAA,YAAY,CAACG,IAAb,CAAkBd,OAAO,CAACe,OAA1B;AACAF,IAAAA,eAAe,GAAG;AAAG,MAAA,SAAS,EAAEb,OAAO,CAACgB,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAlB;AACH;;AAED,UAAQd,WAAR;AACI,SAAM,OAAN;AACIQ,MAAAA,YAAY,GAAG;AACK,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADhB;AAEK,QAAA,KAAK,EAAEb;AAFZ,SAGSD,aAHT;AAIK,QAAA,QAAQ,EAAEG,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAKA;;AACJ,SAAM,UAAN;AACII,MAAAA,YAAY,GAAG;AACK,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB;AADhB,SAESd,aAFT;AAGK,QAAA,QAAQ,EAAEG,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAIA;;AACJ,SAAM,QAAN;AACII,MAAAA,YAAY,GAAG;AACK,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADhB;AAEK,QAAA,KAAK,EAAEb,KAFZ;AAGK,QAAA,QAAQ,EAAEE,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIUH,aAAa,CAACe,OAAd,CAAsBC,GAAtB,CAA0BC,MAAM,IAC7B;AACI,QAAA,KAAK,EAAEA,MAAM,CAAChB,KADlB;AAEI,QAAA,GAAG,EAAEgB,MAAM,CAAChB,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGSgB,MAAM,CAACC,OAHhB,CADH,CAJV,CAAf;AAYA;;AACJ;AACIX,MAAAA,YAAY,GAAG;AACK,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADhB;AAEK,QAAA,KAAK,EAAEb;AAFZ,SAGSD,aAHT;AAIK,QAAA,QAAQ,EAAEG,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AA7BR;;AAoCA,QAAMgB,WAAW,GAAGjB,KAAK,GAAG;AAAO,IAAA,SAAS,EAAEM,YAAY,CAACM,IAAb,CAAkB,GAAlB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CZ,KAA3C,CAAH,GAA+D,IAAxF;AACA,SACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKqB,WADL,EAEKZ,YAFL,EAGKG,eAHL,CADJ;AAOH,CAtDD;;AAwDA,eAAeZ,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = ({elementType, elementConfig, value, label, changed, invalid, shouldValidate = false, touched}) => {\n    let inputElement = [null];\n    const inputCLasses = [classes.InputElement];\n    let validationError = null;\n\n    if (invalid && shouldValidate && touched) {\n        inputCLasses.push(classes.Invalid);\n        validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>;\n    }\n\n    switch (elementType) {\n        case ('input'):\n            inputElement = <input\n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                {...elementConfig}\n                                onChange={changed} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                                className={inputCLasses.join(' ')}\n                                {...elementConfig}\n                                onChange={changed} />\n            break;\n        case ('select'):\n            inputElement = <select\n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                onChange={changed}>\n                                    {elementConfig.options.map(option => (\n                                        <option \n                                            value={option.value}\n                                            key={option.value}>\n                                                {option.display}\n                                        </option>\n                                    ))}\n                            </select>\n            break;\n        default:\n            inputElement = <input \n                                className={inputCLasses.join(' ')}\n                                value={value}\n                                {...elementConfig}\n                                onChange={changed}  />\n    }\n\n    const labelElemtn = label ? <label className={inputCLasses.join(' ')}>{label}</label> : null;\n    return (\n        <div className={classes.Input}>\n            {labelElemtn}\n            {inputElement}\n            {validationError}\n        </div>\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}