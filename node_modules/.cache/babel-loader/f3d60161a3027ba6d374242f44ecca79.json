{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/the-burguer-builder/src/containers/BurguerBuilder/BurguerBuilder.js\";\nimport React, { Component, Fragment } from 'react';\nimport Burguer from '../../components/Burguer/Burguer';\nimport BuildControls from '../../components/Burguer/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burguer/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport { ADD_INGREDIENT, REMOVE_INGREDIENT } from '../../store/actions';\n\nclass BurguerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalPrice: 4,\n      purchasable: false,\n      pusrchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(key => ingredients[key]).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        pusrchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        pusrchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // axios.get('/ingredients.json').then(resp => {\n    //     this.setState({ingredients: resp.data});\n    // }).catch((e) => {\n    //     this.setState({error: true});\n    // }).finally(() => {\n    //     this.setState({loading: false});\n    // });\n  }\n\n  render() {\n    const disableInfo = { ...this.props.ingredients\n    };\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    let orderSummary = this.state.loading || this.props.ingredients == null ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : React.createElement(OrderSummary, {\n      ingredients: this.props.ingredients,\n      purchaseCancel: this.purchaseCancelHandler,\n      purchaseContinue: this.purchaseContinueHandler,\n      price: this.props.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n    let burguer = this.props.ingredients ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Burguer, {\n      ingredients: this.props.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.props.onIngredientAdded,\n      ingredientRemoved: this.props.onIngredientRemoved,\n      disabled: disableInfo,\n      purchasable: this.state.purchasable,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })) : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.pusrchasing,\n      modalClose: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, orderSummary), burguer);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: name => dispatch({\n      type: ADD_INGREDIENT,\n      ingredientName: name\n    }),\n    onIngredientRemoved: name => dispatch({\n      type: REMOVE_INGREDIENT,\n      ingredientName: name\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurguerBuilder, axios));","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/containers/BurguerBuilder/BurguerBuilder.js"],"names":["React","Component","Fragment","Burguer","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","ADD_INGREDIENT","REMOVE_INGREDIENT","BurguerBuilder","state","totalPrice","purchasable","pusrchasing","loading","error","updatePurchaseState","ingredients","sum","Object","keys","map","key","reduce","el","setState","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","render","disableInfo","orderSummary","burguer","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","name","type","ingredientName"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Burguer from '../../components/Burguer/Burguer';\nimport BuildControls from '../../components/Burguer/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burguer/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport { ADD_INGREDIENT, REMOVE_INGREDIENT } from '../../store/actions';\n\nclass BurguerBuilder extends Component {\n    state = {\n        totalPrice: 4,\n        purchasable: false,\n        pusrchasing: false,\n        loading: false,\n        error: false\n    };\n\n    componentDidMount() {\n        this.setState({loading: true})\n        // axios.get('/ingredients.json').then(resp => {\n        //     this.setState({ingredients: resp.data});\n        // }).catch((e) => {\n        //     this.setState({error: true});\n        // }).finally(() => {\n        //     this.setState({loading: false});\n        // });\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(key => ingredients[key])\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({ purchasable: sum > 0 });\n    };\n\n    purchaseHandler = () => {\n        this.setState({pusrchasing: true});\n    };\n\n    purchaseCancelHandler = () => {\n        this.setState({pusrchasing: false});\n    };\n\n    purchaseContinueHandler = () => {\n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price=' + this.state.totalPrice);\n\n        const queryString = queryParams.join('&');\n\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n    };\n\n    render() {\n        const disableInfo = {\n            ...this.props.ingredients\n        };\n\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n\n        let orderSummary = this.state.loading || this.props.ingredients == null ?\n                <Spinner /> :\n                <OrderSummary\n                    ingredients={this.props.ingredients}\n                    purchaseCancel={this.purchaseCancelHandler}\n                    purchaseContinue={this.purchaseContinueHandler}\n                    price={this.props.totalPrice} />;\n\n        let burguer = this.props.ingredients ? (\n            <Fragment>\n                <Burguer ingredients={this.props.ingredients} />\n                <BuildControls\n                    ingredientAdded={this.props.onIngredientAdded}\n                    ingredientRemoved={this.props.onIngredientRemoved}\n                    disabled={disableInfo}\n                    purchasable={this.state.purchasable}\n                    price={this.state.totalPrice}\n                    ordered={this.purchaseHandler} />\n            </Fragment> \n        ) : <Spinner />;\n\n        return (\n            <Fragment>\n                <Modal show={this.state.pusrchasing} modalClose={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burguer}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.ingredients,\n        totalPrice: state.totalPrice\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (name) => dispatch({type: ADD_INGREDIENT, ingredientName: name }),\n        onIngredientRemoved: (name) => dispatch({type: REMOVE_INGREDIENT, ingredientName: name})\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurguerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}