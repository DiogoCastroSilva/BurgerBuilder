{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport default (httpClient => {\n  const [error, setError] = useState(null);\n  const reqInterceptor = httpClient.interceptors.response.use(req => {\n    setError(null);\n    return req;\n  });\n  const resInterceptor = httpClient.interceptors.response.use(res => res, error => {\n    setError(error);\n  });\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.request.eject(resInterceptor);\n    };\n  }, [reqInterceptor, resInterceptor]);\n\n  const errorConfirmHandler = () => {\n    setError(null);\n  };\n\n  return [error, errorConfirmHandler];\n});","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/hooks/http-error-handler.js"],"names":["useState","useEffect","httpClient","error","setError","reqInterceptor","interceptors","response","use","req","resInterceptor","res","request","eject","errorConfirmHandler"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAeC,UAAU,IAAI;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMK,cAAc,GAAGH,UAAU,CAACI,YAAX,CAAwBC,QAAxB,CAAiCC,GAAjC,CAAqCC,GAAG,IAAI;AAC/DL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,WAAOK,GAAP;AACH,GAHsB,CAAvB;AAKA,QAAMC,cAAc,GAAGR,UAAU,CAACI,YAAX,CAAwBC,QAAxB,CAAiCC,GAAjC,CAAqCG,GAAG,IAAIA,GAA5C,EAAiDR,KAAK,IAAI;AAC7EC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAFsB,CAAvB;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACTC,MAAAA,UAAU,CAACI,YAAX,CAAwBM,OAAxB,CAAgCC,KAAhC,CAAsCR,cAAtC;AACAH,MAAAA,UAAU,CAACI,YAAX,CAAwBM,OAAxB,CAAgCC,KAAhC,CAAsCH,cAAtC;AACH,KAHD;AAIH,GALQ,EAKN,CAACL,cAAD,EAAiBK,cAAjB,CALM,CAAT;;AAOA,QAAMI,mBAAmB,GAAG,MAAM;AAC9BV,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAIA,SAAO,CAACD,KAAD,EAAQW,mBAAR,CAAP;AACH,CAxBD","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default httpClient => {\n    const [error, setError] = useState(null);\n\n    const reqInterceptor = httpClient.interceptors.response.use(req => {\n        setError(null)\n        return req;\n    });\n    \n    const resInterceptor = httpClient.interceptors.response.use(res => res, error => {\n        setError(error)\n    });\n    \n    useEffect(() => {\n        return () => {\n            httpClient.interceptors.request.eject(reqInterceptor);\n            httpClient.interceptors.request.eject(resInterceptor);\n        };\n    }, [reqInterceptor, resInterceptor]);\n    \n    const errorConfirmHandler = () => {\n        setError(null);\n    };\n\n    return [error, errorConfirmHandler];\n};\n"]},"metadata":{},"sourceType":"module"}