{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/the-burguer-builder/src/containers/BurguerBuilder/BurguerBuilder.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Burguer from '../../components/Burguer/Burguer';\nimport BuildControls from '../../components/Burguer/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burguer/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport { addIngredient, removeIngredient, getIngredients, purchaseInit } from '../../store/actions/index';\n\nclass BurguerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pusrchasing: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(key => ingredients[key]).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    };\n\n    this.purchaseHandler = () => {\n      if (this.props.isAuth) {\n        this.setState({\n          pusrchasing: true\n        });\n      } else {}\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        pusrchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    this.props.getIngredients();\n  }\n\n  render() {\n    const disableInfo = { ...this.props.ingredients\n    };\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    let orderSummary = this.props.ingredients ? React.createElement(OrderSummary, {\n      ingredients: this.props.ingredients,\n      purchaseCancel: this.purchaseCancelHandler,\n      purchaseContinue: this.purchaseContinueHandler,\n      price: this.props.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : null;\n    let burger = this.props.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n\n    if (this.props.ingredients) {\n      burger = React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Burguer, {\n        ingredients: this.props.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disableInfo,\n        purchasable: this.updatePurchaseState(this.props.ingredients),\n        price: this.props.totalPrice,\n        ordered: this.purchaseHandler,\n        isAuth: this.props.isAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.pusrchasing,\n      modalClose: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: name => dispatch(addIngredient(name)),\n    onIngredientRemoved: name => dispatch(removeIngredient(name)),\n    getIngredients: () => dispatch(getIngredients()),\n    onInitPurchase: () => dispatch(purchaseInit())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurguerBuilder, axios));","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/containers/BurguerBuilder/BurguerBuilder.js"],"names":["React","Component","Fragment","connect","Burguer","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","addIngredient","removeIngredient","getIngredients","purchaseInit","BurguerBuilder","state","pusrchasing","updatePurchaseState","ingredients","sum","Object","keys","map","key","reduce","el","purchaseHandler","props","isAuth","setState","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","componentDidMount","render","disableInfo","orderSummary","totalPrice","burger","error","onIngredientAdded","onIngredientRemoved","mapStateToProps","burgerBuilder","auth","token","mapDispatchToProps","dispatch","name"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport Burguer from '../../components/Burguer/Burguer';\nimport BuildControls from '../../components/Burguer/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burguer/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport { addIngredient, removeIngredient, getIngredients, purchaseInit } from '../../store/actions/index';\n\nclass BurguerBuilder extends Component {\n    state = {\n        pusrchasing: false,\n    };\n\n    componentDidMount() {\n        this.props.getIngredients();\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(key => ingredients[key])\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        return sum > 0;\n    };\n\n    purchaseHandler = () => {\n        if (this.props.isAuth) {\n            this.setState({pusrchasing: true});\n        } else {\n            \n        }\n        \n    };\n\n    purchaseCancelHandler = () => {\n        this.setState({pusrchasing: false});\n    };\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    };\n\n    render() {\n        const disableInfo = {\n            ...this.props.ingredients\n        };\n\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n\n        let orderSummary = this.props.ingredients ?\n                <OrderSummary\n                    ingredients={this.props.ingredients}\n                    purchaseCancel={this.purchaseCancelHandler}\n                    purchaseContinue={this.purchaseContinueHandler}\n                    price={this.props.totalPrice} /> :\n                    null;\n\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if (this.props.ingredients) {\n            burger = (\n                <Fragment>\n                    <Burguer ingredients={this.props.ingredients} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disableInfo}\n                        purchasable={this.updatePurchaseState(this.props.ingredients)}\n                        price={this.props.totalPrice}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuth} />\n                </Fragment>\n            );\n        }\n\n        return (\n            <Fragment>\n                <Modal show={this.state.pusrchasing} modalClose={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuth: state.auth.token !== null\n    };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (name) => dispatch(addIngredient(name)),\n        onIngredientRemoved: (name) => dispatch(removeIngredient(name)),\n        getIngredients: () => dispatch(getIngredients()),\n        onInitPurchase: () => dispatch(purchaseInit())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurguerBuilder, axios));"]},"metadata":{},"sourceType":"module"}