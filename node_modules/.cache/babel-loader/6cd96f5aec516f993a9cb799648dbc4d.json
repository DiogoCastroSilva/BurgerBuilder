{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport { addIngredient, removeIngredient, getIngredients, purchaseInit } from '../../store/actions/index';\nimport { setRedirectPath } from '../../store/actions/auth';\nexport const BurgerBuilder = ({\n  // getIngredients,\n  // onSetRedirectPath,\n  // onInitPurchase,\n  // onIngredientAdded,\n  // onIngredientRemoved,\n  // isAuth,\n  history // ingredients,\n  // totalPrice,\n  // error\n\n}) => {\n  const [pusrchasing, setPusrchasing] = useState(false);\n  const {\n    ingredients,\n    totalPrice,\n    error,\n    isAuth\n  } = useSelector(state => {\n    return {\n      isAuth: state.auth.token !== null,\n      ...state.burgerBuilder\n    };\n  });\n  const dispatch = useDispatch();\n\n  const onIngredientAdded = name => dispatch(addIngredient(name));\n\n  const onIngredientRemoved = name => dispatch(removeIngredient(name));\n\n  const getIngredients = () => dispatch(getIngredients());\n\n  const onInitPurchase = () => dispatch(purchaseInit());\n\n  const onSetRedirectPath = path => dispatch(setRedirectPath(path));\n\n  useEffect(() => {\n    getIngredients();\n  }, [getIngredients]);\n\n  const updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients).map(key => ingredients[key]).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  };\n\n  const purchaseHandler = () => {\n    if (isAuth) {\n      setPusrchasing(true);\n    } else {\n      onSetRedirectPath('/checkout');\n      history.push('/auth');\n    }\n  };\n\n  const purchaseCancelHandler = () => {\n    setPusrchasing(false);\n  };\n\n  const purchaseContinueHandler = () => {\n    onInitPurchase();\n    history.push('/checkout');\n  };\n\n  const disableInfo = { ...ingredients\n  };\n\n  for (let key in disableInfo) {\n    disableInfo[key] = disableInfo[key] <= 0;\n  }\n\n  let orderSummary = ingredients ? React.createElement(OrderSummary, {\n    ingredients: ingredients,\n    purchaseCancel: purchaseCancelHandler,\n    purchaseContinue: purchaseContinueHandler,\n    price: totalPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : null;\n  let burger = error ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  });\n\n  if (ingredients) {\n    burger = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: onIngredientAdded,\n      ingredientRemoved: onIngredientRemoved,\n      disabled: disableInfo,\n      purchasable: updatePurchaseState(ingredients),\n      price: totalPrice,\n      ordered: purchaseHandler,\n      isAuth: isAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: pusrchasing,\n    modalClose: purchaseCancelHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, orderSummary), burger);\n}; // const mapStateToProps = state => {\n//     return {\n//         ingredients: state.burgerBuilder.ingredients,\n//         totalPrice: state.burgerBuilder.totalPrice,\n//         error: state.burgerBuilder.error,\n//         isAuth: state.auth.token !== null\n//     };\n// };\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         onIngredientAdded: (name) => dispatch(addIngredient(name)),\n//         onIngredientRemoved: (name) => dispatch(removeIngredient(name)),\n//         getIngredients: () => dispatch(getIngredients()),\n//         onInitPurchase: () => dispatch(purchaseInit()),\n//         onSetRedirectPath: (path) => dispatch(setRedirectPath(path))\n//     };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Fragment","useState","useEffect","connect","useDispatch","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","addIngredient","removeIngredient","getIngredients","purchaseInit","setRedirectPath","BurgerBuilder","history","pusrchasing","setPusrchasing","ingredients","totalPrice","error","isAuth","useSelector","state","auth","token","burgerBuilder","dispatch","onIngredientAdded","name","onIngredientRemoved","onInitPurchase","onSetRedirectPath","path","updatePurchaseState","sum","Object","keys","map","key","reduce","el","purchaseHandler","push","purchaseCancelHandler","purchaseContinueHandler","disableInfo","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport { addIngredient, removeIngredient, getIngredients, purchaseInit } from '../../store/actions/index';\nimport { setRedirectPath } from '../../store/actions/auth';\n\nexport const BurgerBuilder = ({\n    // getIngredients,\n    // onSetRedirectPath,\n    // onInitPurchase,\n    // onIngredientAdded,\n    // onIngredientRemoved,\n    // isAuth,\n    history,\n    // ingredients,\n    // totalPrice,\n    // error\n}) => {\n    const [pusrchasing, setPusrchasing] = useState(false);\n\n    const {ingredients, totalPrice, error, isAuth} = useSelector(state => {\n        return {\n            isAuth: state.auth.token !== null,\n            ...state.burgerBuilder\n        }\n    });\n\n    const dispatch = useDispatch();\n    const onIngredientAdded = name => dispatch(addIngredient(name));\n    const onIngredientRemoved = name => dispatch(removeIngredient(name));\n    const getIngredients = () => dispatch(getIngredients());\n    const onInitPurchase = () => dispatch(purchaseInit());\n    const onSetRedirectPath = path => dispatch(setRedirectPath(path));\n\n    useEffect(() => {\n        getIngredients();\n    }, [getIngredients]);\n\n    const updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(key => ingredients[key])\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        return sum > 0;\n    };\n\n    const purchaseHandler = () => {\n        if (isAuth) {\n            setPusrchasing(true);\n        } else {\n            onSetRedirectPath('/checkout');\n            history.push('/auth');\n        }\n        \n    };\n\n    const purchaseCancelHandler = () => {\n        setPusrchasing(false);\n    };\n\n    const purchaseContinueHandler = () => {\n        onInitPurchase();\n        history.push('/checkout');\n    };\n\n    const disableInfo = {\n        ...ingredients\n    };\n\n    for (let key in disableInfo) {\n        disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    let orderSummary = ingredients ?\n            <OrderSummary\n                ingredients={ingredients}\n                purchaseCancel={purchaseCancelHandler}\n                purchaseContinue={purchaseContinueHandler}\n                price={totalPrice} /> :\n                null;\n\n    let burger = error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n    if (ingredients) {\n        burger = (\n            <Fragment>\n                <Burger ingredients={ingredients} />\n                <BuildControls\n                    ingredientAdded={onIngredientAdded}\n                    ingredientRemoved={onIngredientRemoved}\n                    disabled={disableInfo}\n                    purchasable={updatePurchaseState(ingredients)}\n                    price={totalPrice}\n                    ordered={purchaseHandler}\n                    isAuth={isAuth} />\n            </Fragment>\n        );\n    }\n\n    return (\n        <Fragment>\n            <Modal show={pusrchasing} modalClose={purchaseCancelHandler}>\n                {orderSummary}\n            </Modal>\n            {burger}\n        </Fragment>\n    );\n}\n\n// const mapStateToProps = state => {\n//     return {\n//         ingredients: state.burgerBuilder.ingredients,\n//         totalPrice: state.burgerBuilder.totalPrice,\n//         error: state.burgerBuilder.error,\n//         isAuth: state.auth.token !== null\n//     };\n// };\n\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         onIngredientAdded: (name) => dispatch(addIngredient(name)),\n//         onIngredientRemoved: (name) => dispatch(removeIngredient(name)),\n//         getIngredients: () => dispatch(getIngredients()),\n//         onInitPurchase: () => dispatch(purchaseInit()),\n//         onSetRedirectPath: (path) => dispatch(setRedirectPath(path))\n//     };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}