{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/the-burguer-builder/src/containers/BurguerBuilder/BurguerBuilder.js\";\nimport React, { Component, Fragment } from 'react';\nimport Burguer from '../../components/Burguer/Burguer';\nimport BuildControls from '../../components/Burguer/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burguer/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurguerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      pusrchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(key => ingredients[key]).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount <= 0) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        pusrchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        pusrchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // axios.get('/ingredients.json').then(resp => {\n    //     this.setState({ingredients: resp.data});\n    // }).catch((e) => {\n    //     this.setState({error: true});\n    // }).finally(() => {\n    //     this.setState({loading: false});\n    // });\n  }\n\n  render() {\n    const disableInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    let orderSummary = this.state.loading || this.state.ingredients == null ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCancel: this.purchaseCancelHandler,\n      purchaseContinue: this.purchaseContinueHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    });\n    let burguer = this.state.ingredients ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Burguer, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disableInfo,\n      purchasable: this.state.purchasable,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })) : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.pusrchasing,\n      modalClose: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, orderSummary), burguer);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect()(withErrorHandler(BurguerBuilder, axios));","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/containers/BurguerBuilder/BurguerBuilder.js"],"names":["React","Component","Fragment","Burguer","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurguerBuilder","state","ingredients","totalPrice","purchasable","pusrchasing","loading","error","updatePurchaseState","sum","Object","keys","map","key","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","render","disableInfo","orderSummary","burguer","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Burguer from '../../components/Burguer/Burguer';\nimport BuildControls from '../../components/Burguer/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burguer/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nclass BurguerBuilder extends Component {\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n        purchasable: false,\n        pusrchasing: false,\n        loading: false,\n        error: false\n    };\n\n    componentDidMount() {\n        this.setState({loading: true})\n        // axios.get('/ingredients.json').then(resp => {\n        //     this.setState({ingredients: resp.data});\n        // }).catch((e) => {\n        //     this.setState({error: true});\n        // }).finally(() => {\n        //     this.setState({loading: false});\n        // });\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(key => ingredients[key])\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({ purchasable: sum > 0 });\n    };\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    };\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n\n        if (oldCount <= 0) return;\n\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    };\n\n    purchaseHandler = () => {\n        this.setState({pusrchasing: true});\n    };\n\n    purchaseCancelHandler = () => {\n        this.setState({pusrchasing: false});\n    };\n\n    purchaseContinueHandler = () => {\n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price=' + this.state.totalPrice);\n\n        const queryString = queryParams.join('&');\n\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n    };\n\n    render() {\n        const disableInfo = {\n            ...this.state.ingredients\n        };\n\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n\n        let orderSummary = this.state.loading || this.state.ingredients == null ?\n                <Spinner /> :\n                <OrderSummary\n                    ingredients={this.state.ingredients}\n                    purchaseCancel={this.purchaseCancelHandler}\n                    purchaseContinue={this.purchaseContinueHandler}\n                    price={this.state.totalPrice} />;\n\n        let burguer = this.state.ingredients ? (\n            <Fragment>\n                <Burguer ingredients={this.state.ingredients} />\n                <BuildControls\n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    disabled={disableInfo}\n                    purchasable={this.state.purchasable}\n                    price={this.state.totalPrice}\n                    ordered={this.purchaseHandler} />\n            </Fragment> \n        ) : <Spinner />;\n\n        return (\n            <Fragment>\n                <Modal show={this.state.pusrchasing} modalClose={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burguer}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        \n    }\n};\n\nexport default connect()(withErrorHandler(BurguerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}