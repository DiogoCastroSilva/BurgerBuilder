{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/the-burguer-builder/src/containers/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Fragment, Component } from 'react';\nimport Modal from '../../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentWilldMount() {\n      this.reqInterceptor = axios.interceptors.response.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.request.eject(this.resInterceptor);\n    }\n\n    render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.error,\n        modalClose: this.errorConfirmHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.state.error ? this.state.error.message : null), React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/containers/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Fragment","Component","Modal","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmHandler","setState","componentWilldMount","reqInterceptor","interceptors","response","use","req","resInterceptor","res","componentWillUnmount","request","eject","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oCAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAAA;;AAClD,iBAAO,cAAcJ,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC3BK,KAD2B,GACnB;AACJC,QAAAA,KAAK,EAAE;AADH,OADmB;;AAAA,WAqB3BC,mBArB2B,GAqBL,MAAM;AACxB,aAAKC,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAE;AAAR,SAAd;AACH,OAvB0B;AAAA;;AAK3BG,IAAAA,mBAAmB,GAAG;AAClB,WAAKC,cAAL,GAAsBN,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCC,GAAG,IAAI;AACzD,aAAKN,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAE;AAAR,SAAd;AACA,eAAOQ,GAAP;AACH,OAHqB,CAAtB;AAKA,WAAKC,cAAL,GAAsBX,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCG,GAAG,IAAIA,GAAvC,EAA4CV,KAAK,IAAI;AACvE,aAAKE,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACH,OAFqB,CAAtB;AAGH;;AAEDW,IAAAA,oBAAoB,GAAG;AACnBb,MAAAA,KAAK,CAACO,YAAN,CAAmBO,OAAnB,CAA2BC,KAA3B,CAAiC,KAAKT,cAAtC;AACAN,MAAAA,KAAK,CAACO,YAAN,CAAmBO,OAAnB,CAA2BC,KAA3B,CAAiC,KAAKJ,cAAtC;AACH;;AAMDK,IAAAA,MAAM,GAAG;AACL,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC,KAAxB;AAA+B,QAAA,UAAU,EAAE,KAAKC,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,OAApC,GAA8C,IADnD,CADJ,EAII,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CADJ;AAQH;;AAlC0B,GAA/B;AAqCH,CAtCD;;AAwCA,eAAepB,gBAAf","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Modal from '../../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        };\n\n        componentWilldMount() {\n            this.reqInterceptor = axios.interceptors.response.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.request.eject(this.resInterceptor);\n        }\n\n        errorConfirmHandler = () => {\n            this.setState({error: null});\n        }\n\n        render() {\n            return (\n                <Fragment>\n                    <Modal show={this.state.error} modalClose={this.errorConfirmHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Fragment>\n            );\n        }\n    }\n    \n};\n\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}