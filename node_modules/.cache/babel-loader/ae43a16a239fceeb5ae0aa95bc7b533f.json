{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/containers/Layout/Layout.js\";\nimport React, { Component, Fragment, useState } from 'react';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux';\n\nconst Layout = () => {\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\n\n  sideDrawerCloseHandler = () => {\n    setShowSideDrawer(false);\n  };\n\n  sideDrawerToogleHandler = () => {\n    setShowSideDrawer(prevState => {\n      return {\n        showSideDrawer: !prevState.showSideDrawer\n      };\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    isAuth: props.isAuthenticated,\n    toogle: this.sideDrawerToogleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(SideDrawer, {\n    isAuth: this.props.isAuthenticated,\n    open: this.state.showSideDrawer,\n    close: this.sideDrawerCloseHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    className: classes.Content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, this.props.children));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/containers/Layout/Layout.js"],"names":["React","Component","Fragment","useState","classes","Toolbar","SideDrawer","connect","Layout","showSideDrawer","setShowSideDrawer","sideDrawerCloseHandler","sideDrawerToogleHandler","prevState","props","isAuthenticated","state","Content","children","mapStateToProps","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;;AAEAQ,EAAAA,sBAAsB,GAAG,MAAM;AAC3BD,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIAE,EAAAA,uBAAuB,GAAG,MAAM;AAC5BF,IAAAA,iBAAiB,CAAEG,SAAD,IAAe;AAC7B,aAAO;AAACJ,QAAAA,cAAc,EAAE,CAACI,SAAS,CAACJ;AAA5B,OAAP;AACH,KAFgB,CAAjB;AAGH,GAJD;;AAMA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AACI,IAAA,MAAM,EAAEK,KAAK,CAACC,eADlB;AAEI,IAAA,MAAM,EAAE,KAAKH,uBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,UAAD;AACI,IAAA,MAAM,EAAE,KAAKE,KAAL,CAAWC,eADvB;AAEI,IAAA,IAAI,EAAE,KAAKC,KAAL,CAAWP,cAFrB;AAGI,IAAA,KAAK,EAAE,KAAKE,sBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAQI;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACa,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,KAAKH,KAAL,CAAWI,QADhB,CARJ,CADJ;AAcH,CA3BD;;AA6BA,MAAMC,eAAe,GAAGH,KAAK,IAAI;AAC7B,SAAO;AACHD,IAAAA,eAAe,EAAEC,KAAK,CAACI,IAAN,CAAWC,KAAX,KAAqB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACY,eAAD,CAAP,CAAyBX,MAAzB,CAAf","sourcesContent":["import React, { Component, Fragment, useState } from 'react';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux';\n\nconst Layout = () => {\n    const [showSideDrawer, setShowSideDrawer] = useState(false);\n\n    sideDrawerCloseHandler = () => {\n        setShowSideDrawer(false);\n    };\n\n    sideDrawerToogleHandler = () => {\n        setShowSideDrawer((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer};\n        });\n    };\n\n    return (\n        <Fragment>\n            <Toolbar\n                isAuth={props.isAuthenticated}\n                toogle={this.sideDrawerToogleHandler} />\n            <SideDrawer\n                isAuth={this.props.isAuthenticated}\n                open={this.state.showSideDrawer}\n                close={this.sideDrawerCloseHandler} />\n            <main className={classes.Content}>\n                {this.props.children}\n            </main>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);\n"]},"metadata":{},"sourceType":"module"}