{"ast":null,"code":"import { ADD_INGREDIENT, REMOVE_INGREDIENT, SET_INGREDIENTS } from './actionTypes';\nimport axios from '../../axios-orders';\nexport const addIngredient = name => {\n  return {\n    type: ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\nexport const removeIngredient = name => {\n  return {\n    type: REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nconst setIngredients = ingredients => {\n  return {\n    type: SET_INGREDIENTS,\n    ingredients: ingredients\n  };\n};\n\nconst fetchIngredientsFailed = () => {\n  return {\n    type: FETCH_INGREDIENTS_FAILED\n  };\n};\n\nexport const getIngredient = () => {\n  return dispatch => {\n    axios.get('/ingredients.json').then(resp => {\n      dispatch(setIngredients(resp.data));\n    }).catch(e => {\n      this.setState({\n        error: true\n      });\n    }).finally(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/store/actions/burguerBuilder.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","axios","addIngredient","name","type","ingredientName","removeIngredient","setIngredients","ingredients","fetchIngredientsFailed","FETCH_INGREDIENTS_FAILED","getIngredient","dispatch","get","then","resp","data","catch","e","setState","error","finally","loading"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,iBAAzB,EAA4CC,eAA5C,QAAmE,eAAnE;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEN,cADH;AAEHO,IAAAA,cAAc,EAAEF;AAFb,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,gBAAgB,GAAIH,IAAD,IAAU;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEL,iBADH;AAEHM,IAAAA,cAAc,EAAEF;AAFb,GAAP;AAIH,CALM;;AAOP,MAAMI,cAAc,GAAIC,WAAD,IAAiB;AACpC,SAAO;AACHJ,IAAAA,IAAI,EAAEJ,eADH;AAEHQ,IAAAA,WAAW,EAAEA;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,sBAAsB,GAAG,MAAM;AACjC,SAAO;AACHL,IAAAA,IAAI,EAAEM;AADH,GAAP;AAGH,CAJD;;AAMA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAOC,QAAQ,IAAI;AACfX,IAAAA,KAAK,CAACY,GAAN,CAAU,mBAAV,EAA+BC,IAA/B,CAAoCC,IAAI,IAAI;AACxCH,MAAAA,QAAQ,CAACL,cAAc,CAACQ,IAAI,CAACC,IAAN,CAAf,CAAR;AACH,KAFD,EAEGC,KAFH,CAEUC,CAAD,IAAO;AACZ,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KAJD,EAIGC,OAJH,CAIW,MAAM;AACb,WAAKF,QAAL,CAAc;AAACG,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAND;AAOH,GARD;AASH,CAVM","sourcesContent":["import { ADD_INGREDIENT, REMOVE_INGREDIENT, SET_INGREDIENTS } from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: ADD_INGREDIENT,\n        ingredientName: name\n    }\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n};\n\nconst setIngredients = (ingredients) => {\n    return {\n        type: SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nconst fetchIngredientsFailed = () => {\n    return {\n        type: FETCH_INGREDIENTS_FAILED\n    }\n};\n\nexport const getIngredient = () => {\n    return dispatch => {\n        axios.get('/ingredients.json').then(resp => {\n            dispatch(setIngredients(resp.data));\n        }).catch((e) => {\n            this.setState({error: true});\n        }).finally(() => {\n            this.setState({loading: false});\n        });\n    };\n};"]},"metadata":{},"sourceType":"module"}