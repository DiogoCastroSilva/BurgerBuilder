{"ast":null,"code":"import _defineProperty from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/diogosilva/Desktop/the-burguer-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import classes from'./Auth.module.css';import{updateObject,checkValidation}from'../../shared/utility';import Button from'../../components/UI/Button/Button';import Input from'../../components//UI/Input/Input';import Spinner from'../../components/UI/Spinner/Spinner';import{auth}from'../../store/actions/index';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import{setRedirectPath}from'../../store/actions/auth';var Auth=/*#__PURE__*/function(_Component){_inherits(Auth,_Component);function Auth(){var _getPrototypeOf2;var _this;_classCallCheck(this,Auth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Auth)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={controls:{email:{elementType:'input',elementConfig:{type:'email',placeholder:'Mail Address'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},password:{elementType:'input',elementConfig:{type:'password',placeholder:'Password'},value:'',validation:{required:true,minLength:6},valid:false,touched:false}},isSignup:true};_this.inputChangeHandler=function(event,controlName){var updatedControls=updateObject(_this.state.controls,_defineProperty({},controlName,updateObject(_this.state.controls[controlName],{value:event.target.value,valid:checkValidation(event.target.value,_this.state.controls[controlName].validation),touched:true})));_this.setState({controls:updatedControls});};_this.submitHandler=function(e){e.preventDefault();_this.props.onAuth(_this.state.controls.email.value,_this.state.controls.password.value,_this.state.isSignup);};_this.switchAuthModeHandler=function(){_this.setState(function(prevState){return{isSignup:!prevState.isSignup};});};return _this;}_createClass(Auth,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.props.building&&this.props.redirectPath!=='/'){this.props.onSetRedirectPath();}}},{key:\"render\",value:function render(){var _this2=this;var formElements=[];for(var key in this.state.controls){formElements.push({id:key,config:this.state.controls[key]});}var form=this.props.loading?React.createElement(Spinner,null):formElements.map(function(formElement){return React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,changed:function changed(event){return _this2.inputChangeHandler(event,formElement.id);},touched:formElement.config.touched,shouldValidate:formElement.config.validation,autocomplete:\"on\"});});var errorMessage=this.props.error?React.createElement(\"p\",null,this.props.error.message):null;var authRedirect=this.props.isAuth?React.createElement(Redirect,{to:this.props.redirectPath}):null;return React.createElement(\"div\",{className:classes.Auth},authRedirect,errorMessage,React.createElement(\"form\",{onSubmit:this.submitHandler},form,React.createElement(Button,null,\"SUBMIT\")),React.createElement(Button,{clicked:this.switchAuthModeHandler,type:\"Danger\"},\"SWITCH TO \",this.state.isSignup?'SIGN UP':'SIGN IN'));}}]);return Auth;}(Component);var matStateToProps=function matStateToProps(state){return{loading:state.auth.isLoading,error:state.auth.error,isAuth:state.auth.token!==null,building:state.burgerBuilder.building,redirectPath:state.auth.redirectPath};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(email,password,isSignup){return dispatch(auth(email,password,isSignup));},onSetRedirectPath:function onSetRedirectPath(){return dispatch(setRedirectPath('/'));}};};export default connect(matStateToProps,mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/containers/Auth/Auth.js"],"names":["React","Component","classes","updateObject","checkValidation","Button","Input","Spinner","auth","connect","Redirect","setRedirectPath","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangeHandler","event","controlName","updatedControls","target","setState","submitHandler","e","preventDefault","props","onAuth","switchAuthModeHandler","prevState","building","redirectPath","onSetRedirectPath","formElements","key","push","id","config","form","loading","map","formElement","errorMessage","error","message","authRedirect","isAuth","matStateToProps","isLoading","token","burgerBuilder","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Auth.module.css';\n\nimport { updateObject, checkValidation } from '../../shared/utility';\n\nimport Button  from '../../components/UI/Button/Button';\nimport Input from '../../components//UI/Input/Input';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport { auth } from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setRedirectPath } from '../../store/actions/auth';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    };\n\n    componentDidMount() {\n        if (!this.props.building && this.props.redirectPath !== '/') {\n            this.props.onSetRedirectPath();\n        }\n    }\n\n    inputChangeHandler = (event, controlName) => {\n        const updatedControls = updateObject(this.state.controls, {\n            [controlName]: updateObject(this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidation(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            })\n        });\n\n        this.setState({ controls: updatedControls });\n    };\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\n    };\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return { isSignup: !prevState.isSignup }\n        });\n    };\n\n    render() {\n        const formElements = [];\n        for (let key in this.state.controls) {\n            formElements.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        const form = this.props.loading ? <Spinner /> : formElements.map(formElement => (\n            <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                changed={(event) => this.inputChangeHandler(event, formElement.id)}\n                touched={formElement.config.touched}\n                shouldValidate={formElement.config.validation}\n                autocomplete='on' />\n        ));\n\n        const errorMessage = this.props.error ? <p>{this.props.error.message}</p>: null;\n\n        const authRedirect = this.props.isAuth ? <Redirect to={this.props.redirectPath} /> : null;\n\n        return(\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button>SUBMIT</Button>\n                </form>\n                <Button\n                    clicked={this.switchAuthModeHandler}\n                    type='Danger'>SWITCH TO {this.state.isSignup ? 'SIGN UP' : 'SIGN IN'}</Button>\n            </div>\n        )\n    }\n}\n\nconst matStateToProps = state => {\n    return {\n        loading: state.auth.isLoading,\n        error: state.auth.error,\n        isAuth: state.auth.token !== null,\n        building: state.burgerBuilder.building,\n        redirectPath: state.auth.redirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(auth(email, password, isSignup)),\n        onSetRedirectPath: () => dispatch(setRedirectPath('/'))\n    };\n};\n\nexport default connect(matStateToProps, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}