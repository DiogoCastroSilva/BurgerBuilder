{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nconst Checkout = ({\n  history,\n  match,\n  ingredients,\n  purchased\n}) => {\n  const checkoutCancelHandler = () => {\n    history.goBack();\n  };\n\n  const checkoutContinueHandler = () => {\n    history.replace('/checkout/contact-data');\n  };\n\n  let summary = React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n\n  if (ingredients) {\n    const purchaseRedirect = purchased ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }) : null;\n    summary = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, purchaseRedirect, React.createElement(CheckoutSummary, {\n      ingredients: ingredients,\n      checkoutCancel: checkoutCancelHandler,\n      checkoutContinue: checkoutContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: match.path + '/contact-data',\n      component: ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n  return summary;\n};\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","Redirect","connect","CheckoutSummary","ContactData","Checkout","history","match","ingredients","purchased","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","summary","purchaseRedirect","path","mapStateToProps","state","burgerBuilder","order"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,WAAjB;AAA8BC,EAAAA;AAA9B,CAAD,KAA8C;AAE3D,QAAMC,qBAAqB,GAAG,MAAM;AAChCJ,IAAAA,OAAO,CAACK,MAAR;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAG,MAAM;AAClCN,IAAAA,OAAO,CAACO,OAAR,CAAgB,wBAAhB;AACH,GAFD;;AAIA,MAAIC,OAAO,GAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AAEA,MAAIN,WAAJ,EAAiB;AACb,UAAMO,gBAAgB,GAAGN,SAAS,GAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAyB,IAA3D;AACAK,IAAAA,OAAO,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,gBADL,EAEI,oBAAC,eAAD;AACI,MAAA,WAAW,EAAEP,WADjB;AAEI,MAAA,cAAc,EAAEE,qBAFpB;AAGI,MAAA,gBAAgB,EAAEE,uBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAEL,KAAK,CAACS,IAAN,GAAa,eADvB;AAEI,MAAA,SAAS,EAAEZ,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAYH;;AACD,SAAOU,OAAP;AACH,CA5BD;;AA8BA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,WAAW,EAAEU,KAAK,CAACC,aAAN,CAAoBX,WAD9B;AAEHC,IAAAA,SAAS,EAAES,KAAK,CAACE,KAAN,CAAYX;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAeP,OAAO,CAACe,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nconst Checkout = ({history, match, ingredients, purchased}) => {\n\n    const checkoutCancelHandler = () => {\n        history.goBack();\n    };\n\n    const checkoutContinueHandler = () => {\n        history.replace('/checkout/contact-data');\n    };\n\n    let summary = <Redirect to=\"/\" />\n\n    if (ingredients) {\n        const purchaseRedirect = purchased ? <Redirect to='/' /> : null;\n        summary = (\n            <div>\n                {purchaseRedirect}\n                <CheckoutSummary\n                    ingredients={ingredients}\n                    checkoutCancel={checkoutCancelHandler}\n                    checkoutContinue={checkoutContinueHandler} />\n                <Route\n                    path={match.path + '/contact-data'}\n                    component={ContactData} />\n            </div>\n        );\n    }\n    return summary;\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    };\n};\n\nexport default connect(mapStateToProps)(Checkout);"]},"metadata":{},"sourceType":"module"}