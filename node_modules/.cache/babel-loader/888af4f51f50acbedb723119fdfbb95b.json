{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/components/Burger/BuildControls/BuildControls.js\";\nimport React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\nconst controls = [{\n  label: 'Salad',\n  type: 'salad'\n}, {\n  label: 'Bacon',\n  type: 'bacon'\n}, {\n  label: 'Cheese',\n  type: 'cheese'\n}, {\n  label: 'Meat',\n  type: 'meat'\n}];\n\nconst BuildControls = ({\n  ingredientAdded,\n  ingredientRemoved,\n  disabled,\n  price,\n  purchasable,\n  ordered,\n  isAuth\n}) => {\n  return React.createElement(\"div\", {\n    className: classes.BuildControls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Current Price: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, price.toFixed(2))), controls.map(control => React.createElement(BuildControl, {\n    key: control.label,\n    label: control.label,\n    add: () => ingredientAdded(control.type),\n    remove: () => ingredientRemoved(control.type),\n    disabled: disabled[control.type],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: !purchasable,\n    className: classes.OrderButton,\n    onClick: ordered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'));\n};\n\nexport default BuildControls;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/components/Burger/BuildControls/BuildControls.js"],"names":["React","classes","BuildControl","controls","label","type","BuildControls","ingredientAdded","ingredientRemoved","disabled","price","purchasable","ordered","isAuth","toFixed","map","control","OrderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,QAAQ,GAAG,CACb;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CADa,EAEb;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAFa,EAGb;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAHa,EAIb;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAJa,CAAjB;;AAOA,MAAMC,aAAa,GAAG,CAAC;AACnBC,EAAAA,eADmB;AAEnBC,EAAAA,iBAFmB;AAGnBC,EAAAA,QAHmB;AAInBC,EAAAA,KAJmB;AAKnBC,EAAAA,WALmB;AAMnBC,EAAAA,OANmB;AAOnBC,EAAAA;AAPmB,CAAD,KAQhB;AACF,SACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACK,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASI,KAAK,CAACI,OAAN,CAAc,CAAd,CAAT,CAAlB,CADJ,EAEKX,QAAQ,CAACY,GAAT,CAAaC,OAAO,IACjB,oBAAC,YAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACZ,KADjB;AAEI,IAAA,KAAK,EAAEY,OAAO,CAACZ,KAFnB;AAGI,IAAA,GAAG,EAAE,MAAMG,eAAe,CAACS,OAAO,CAACX,IAAT,CAH9B;AAII,IAAA,MAAM,EAAE,MAAMG,iBAAiB,CAACQ,OAAO,CAACX,IAAT,CAJnC;AAKI,IAAA,QAAQ,EAAEI,QAAQ,CAACO,OAAO,CAACX,IAAT,CALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFL,EAUI;AACI,IAAA,QAAQ,EAAE,CAACM,WADf;AAEI,IAAA,SAAS,EAAEV,OAAO,CAACgB,WAFvB;AAGI,IAAA,OAAO,EAAEL,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGuBC,MAAM,GAAG,WAAH,GAAiB,kBAH9C,CAVJ,CADJ;AAiBH,CA1BD;;AA4BA,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' }\n];\n\nconst BuildControls = ({\n    ingredientAdded,\n    ingredientRemoved,\n    disabled,\n    price,\n    purchasable,\n    ordered,\n    isAuth\n}) => {\n    return (\n        <div className={classes.BuildControls}>\n            <p>Current Price: <strong>{price.toFixed(2)}</strong></p>\n            {controls.map(control => (\n                <BuildControl\n                    key={control.label}\n                    label={control.label}\n                    add={() => ingredientAdded(control.type)}\n                    remove={() => ingredientRemoved(control.type)}\n                    disabled={disabled[control.type]} />\n            ))}\n            <button\n                disabled={!purchasable}\n                className={classes.OrderButton}\n                onClick={ordered}>{isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n        </div>\n    );\n};\n\nexport default BuildControls;"]},"metadata":{},"sourceType":"module"}