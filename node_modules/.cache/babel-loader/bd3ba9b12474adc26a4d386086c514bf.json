{"ast":null,"code":"import { PURCHASE_BURGER_SUCCESS, PURCHASE_BURGER_FAILED, PURCHASE_BURGER_START, PURCHASE_INIT, FETCH_ORDERS_START, FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAILED } from '../actions/actionTypes';\nimport { updateObject } from '../utilities/utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PURCHASE_INIT:\n      updateObject;\n      return updateObject(state, {\n        purchased: false\n      });\n\n    case PURCHASE_BURGER_START:\n      return { ...state,\n        loading: true\n      };\n\n    case PURCHASE_BURGER_SUCCESS:\n      const newOrder = { ...action.orderData,\n        id: action.id\n      };\n      return { ...state,\n        loading: false,\n        orders: state.orders.concat(newOrder),\n        purchased: true\n      };\n\n    case PURCHASE_BURGER_FAILED:\n      return { ...state,\n        loading: false\n      };\n\n    case FETCH_ORDERS_START:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_ORDERS_SUCCESS:\n      return { ...state,\n        orders: action.orders,\n        loading: false\n      };\n\n    case FETCH_ORDERS_FAILED:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/store/reducers/order.js"],"names":["PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAILED","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","newOrder","orderData","id","concat"],"mappings":"AAAA,SAASA,uBAAT,EAAkCC,sBAAlC,EAA0DC,qBAA1D,EAAiFC,aAAjF,EAAgGC,kBAAhG,EAAoHC,oBAApH,EAA0IC,mBAA1I,QAAqK,wBAArK;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,aAAL;AACII,MAAAA,YAAY;AACZ,aAAOA,YAAY,CAACM,KAAD,EAAQ;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAR,CAAnB;;AACA,SAAKT,qBAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIR,SAAKV,uBAAL;AACI,YAAMgB,QAAQ,GAAG,EACb,GAAGF,MAAM,CAACG,SADG;AAEbC,QAAAA,EAAE,EAAEJ,MAAM,CAACI;AAFE,OAAjB;AAIA,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,OAAO,EAAE,KAFN;AAGHD,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaU,MAAb,CAAoBH,QAApB,CAHL;AAIHL,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAKV,sBAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKN,kBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKL,oBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAFZ;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKJ,mBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ;AACI,aAAOG,KAAP;AA1CR;;AA2CC;AACJ,CA7CD;;AA+CA,eAAeD,OAAf","sourcesContent":["import { PURCHASE_BURGER_SUCCESS, PURCHASE_BURGER_FAILED, PURCHASE_BURGER_START, PURCHASE_INIT, FETCH_ORDERS_START, FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAILED } from '../actions/actionTypes';\nimport { updateObject } from '../utilities/utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PURCHASE_INIT:\n            updateObject\n            return updateObject(state, { purchased: false});\n            case PURCHASE_BURGER_START:\n                return {\n                    ...state,\n                    loading: true\n                };\n        case PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id: action.id\n            };\n            return {\n                ...state,\n                loading: false,\n                orders: state.orders.concat(newOrder),\n                purchased: true\n            };\n        case PURCHASE_BURGER_FAILED:\n            return {\n                ...state,\n                loading: false\n            };\n        case FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            };\n        case FETCH_ORDERS_FAILED:\n            return {\n                ...state,\n                loading: false\n            };\n        default:\n            return state;\n    };\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}