{"ast":null,"code":"import { AUTH_START, AUTH_FAILED, AUTH_SUCCESS, SET_AUTH_REDIRECT, AUTH_INITIATE_LOGOUT, AUTH_LOGOUT, AUTH_CHECK_TIMEOUT, AUTH_USER, AUTH_CHECK_INIT_STATE } from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const authFailed = error => {\n  return {\n    type: AUTH_FAILED,\n    error: error\n  };\n};\nexport const logoutSucceded = () => {\n  return {\n    type: AUTH_LOGOUT\n  };\n};\nexport const logout = () => {\n  // localStorage.removeItem('token');\n  // localStorage.removeItem('expirationDate');\n  // localStorage.removeItem('userID');\n  return {\n    type: AUTH_INITIATE_LOGOUT\n  };\n};\nexport const checkAuthTimeOut = expirationTime => {\n  return {\n    type: AUTH_CHECK_TIMEOUT,\n    expirationTime: expirationTime\n  };\n};\nexport const auth = (email, password, isSignup = false) => {\n  // return dispatch => {\n  //     dispatch(authStart());\n  //     const authData = {\n  //         email: email,\n  //         password: password,\n  //         returnSecureToken: true\n  //     };\n  //     let url = isSignup ?\n  //         'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8' :\n  //         'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8';\n  //     axios.post(url, authData)\n  //         .then(resp => {\n  //             const expirationDate = new Date(new Date().getTime() + resp.data.expiresIn * 1000);\n  //             localStorage.setItem('token', resp.data.idToken);\n  //             localStorage.setItem('expirationDate', expirationDate);\n  //             localStorage.setItem('userID', resp.data.localId)\n  //             dispatch(authSuccess(resp.data.idToken, resp.data.localId));\n  //             dispatch(checkAuthTimeOut(resp.data.expiresIn));\n  //         })\n  //         .catch(e => {\n  //             dispatch(authFailed(e.response.data.error));\n  //         });\n  // };\n  return {\n    type: AUTH_USER,\n    email: email,\n    password: password,\n    isSignup: isSignup\n  };\n};\nexport const setRedirectPath = path => {\n  return {\n    type: SET_AUTH_REDIRECT,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  // return dispatch => {\n  //     const token = localStorage.getItem('token');\n  //     if (!token) {\n  //         dispatch(logout());\n  //     } else {\n  //         const expirationTime = new Date(localStorage.getItem('expirationDate'));\n  //         if (expirationTime > new Date()) {\n  //             const userId =  localStorage.getItem('userID');\n  //             dispatch(authSuccess(token, userId));\n  //             dispatch(checkAuthTimeOut((expirationTime.getTime() - new Date().getTime()) / 1000));\n  //         } else {\n  //             dispatch(logout());\n  //         }\n  //     }\n  // };\n  return {\n    type: AUTH_CHECK_INIT_STATE\n  };\n};","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/store/actions/auth.js"],"names":["AUTH_START","AUTH_FAILED","AUTH_SUCCESS","SET_AUTH_REDIRECT","AUTH_INITIATE_LOGOUT","AUTH_LOGOUT","AUTH_CHECK_TIMEOUT","AUTH_USER","AUTH_CHECK_INIT_STATE","authStart","type","authSuccess","token","userId","authFailed","error","logoutSucceded","logout","checkAuthTimeOut","expirationTime","auth","email","password","isSignup","setRedirectPath","path","authCheckState"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,YAAlC,EAAgDC,iBAAhD,EAAmEC,oBAAnE,EAAyFC,WAAzF,EAAsGC,kBAAtG,EAA0HC,SAA1H,EAAqIC,qBAArI,QAAkK,eAAlK;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHH,IAAAA,IAAI,EAAER,YADH;AAEHU,IAAAA,KAAK,EAAEA,KAFJ;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHL,IAAAA,IAAI,EAAET,WADH;AAEHc,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO;AACHN,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMY,MAAM,GAAG,MAAM;AACxB;AACA;AACA;AACA,SAAO;AACHP,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGH,CAPM;AASP,OAAO,MAAMc,gBAAgB,GAAIC,cAAD,IAAoB;AAChD,SAAO;AACHT,IAAAA,IAAI,EAAEJ,kBADH;AAEHa,IAAAA,cAAc,EAAEA;AAFb,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAQ,GAAG,KAA7B,KAAuC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAO;AACHb,IAAAA,IAAI,EAAEH,SADH;AAEHc,IAAAA,KAAK,EAAEA,KAFJ;AAGHC,IAAAA,QAAQ,EAAEA,QAHP;AAIHC,IAAAA,QAAQ,EAAEA;AAJP,GAAP;AAMH,CAjCM;AAmCP,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAU;AACrC,SAAO;AACHf,IAAAA,IAAI,EAAEP,iBADH;AAEHsB,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,SAAO;AACHhB,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,CAvBM","sourcesContent":["import { AUTH_START, AUTH_FAILED, AUTH_SUCCESS, SET_AUTH_REDIRECT, AUTH_INITIATE_LOGOUT, AUTH_LOGOUT, AUTH_CHECK_TIMEOUT, AUTH_USER, AUTH_CHECK_INIT_STATE } from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: AUTH_START\n    }\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: AUTH_SUCCESS,\n        token: token,\n        userId: userId\n    }\n};\n\nexport const authFailed = (error) => {\n    return {\n        type: AUTH_FAILED,\n        error: error\n    };\n};\n\nexport const logoutSucceded = () => {\n    return {\n        type: AUTH_LOGOUT\n    };\n};\n\nexport const logout = () => {\n    // localStorage.removeItem('token');\n    // localStorage.removeItem('expirationDate');\n    // localStorage.removeItem('userID');\n    return {\n        type: AUTH_INITIATE_LOGOUT\n    };\n};\n\nexport const checkAuthTimeOut = (expirationTime) => {\n    return {\n        type: AUTH_CHECK_TIMEOUT,\n        expirationTime: expirationTime\n    };\n};\n\nexport const auth = (email, password, isSignup = false) => {\n    // return dispatch => {\n    //     dispatch(authStart());\n    //     const authData = {\n    //         email: email,\n    //         password: password,\n    //         returnSecureToken: true\n    //     };\n\n    //     let url = isSignup ?\n    //         'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8' :\n    //         'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXyYykiJQjUafDFB18wiFqDXo21AdZ6L8';\n\n    //     axios.post(url, authData)\n    //         .then(resp => {\n    //             const expirationDate = new Date(new Date().getTime() + resp.data.expiresIn * 1000);\n    //             localStorage.setItem('token', resp.data.idToken);\n    //             localStorage.setItem('expirationDate', expirationDate);\n    //             localStorage.setItem('userID', resp.data.localId)\n    //             dispatch(authSuccess(resp.data.idToken, resp.data.localId));\n    //             dispatch(checkAuthTimeOut(resp.data.expiresIn));\n    //         })\n    //         .catch(e => {\n    //             dispatch(authFailed(e.response.data.error));\n    //         });\n    // };\n\n    return {\n        type: AUTH_USER,\n        email: email,\n        password: password,\n        isSignup: isSignup\n    };\n};\n\nexport const setRedirectPath = (path) => {\n    return {\n        type: SET_AUTH_REDIRECT,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    // return dispatch => {\n    //     const token = localStorage.getItem('token');\n    //     if (!token) {\n    //         dispatch(logout());\n    //     } else {\n    //         const expirationTime = new Date(localStorage.getItem('expirationDate'));\n\n    //         if (expirationTime > new Date()) {\n    //             const userId =  localStorage.getItem('userID');\n    //             dispatch(authSuccess(token, userId));\n    //             dispatch(checkAuthTimeOut((expirationTime.getTime() - new Date().getTime()) / 1000));\n    //         } else {\n    //             dispatch(logout());\n    //         }\n            \n    //     }\n\n    // };\n\n    return {\n        type: AUTH_CHECK_INIT_STATE\n    };\n};"]},"metadata":{},"sourceType":"module"}