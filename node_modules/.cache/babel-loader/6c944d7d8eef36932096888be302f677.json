{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/App.js\";\nimport React, { useEffect } from 'react';\nimport Layout from './containers/Layout/Layout';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Checkout from './containers/Checkout/Checkout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authCheckState } from './store/actions';\nconst asyncCheckout = React.lazy(() => import('./containers/Checkout/Checkout'));\nconst asyncOrders = React.lazy(() => import('./containers/Orders/Orders'));\nconst asyncAuth = React.lazy(() => import('./containers/Auth/Auth'));\n\nconst App = ({\n  onTryAutoSignUp,\n  isAuth\n}) => {\n  useEffect(() => {\n    onTryAutoSignUp();\n  }, [onTryAutoSignUp]);\n  let routes = isAuth ? [{\n    path: '/checkout',\n    component: asyncCheckout\n  }, {\n    path: '/orders',\n    component: asyncOrders\n  }, {\n    path: '/logout',\n    component: Logout\n  }] : [];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, routes.map(route => React.createElement(Route, {\n    path: route.path,\n    component: route.component,\n    key: route.path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/auth\",\n    component: asyncAuth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: BurgerBuilder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/diogosilva/Desktop/react-complete-guide/the-burguer-builder/src/App.js"],"names":["React","useEffect","Layout","Logout","Orders","Auth","Checkout","BurgerBuilder","Route","Switch","withRouter","Redirect","connect","authCheckState","asyncCheckout","lazy","asyncOrders","asyncAuth","App","onTryAutoSignUp","isAuth","routes","path","component","map","route","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,kBAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAGA,MAAMC,aAAa,GAAGd,KAAK,CAACe,IAAN,CAAW,MAAM,OAAO,gCAAP,CAAjB,CAAtB;AACA,MAAMC,WAAW,GAAGhB,KAAK,CAACe,IAAN,CAAW,MAAM,OAAO,4BAAP,CAAjB,CAApB;AACA,MAAME,SAAS,GAAGjB,KAAK,CAACe,IAAN,CAAW,MAAM,OAAO,wBAAP,CAAjB,CAAlB;;AAEA,MAAMG,GAAG,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AAEvCnB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAIA,MAAIE,MAAM,GAAGD,MAAM,GAAG,CACpB;AACEE,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,SAAS,EAAET;AAFb,GADoB,EAKpB;AACEQ,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,SAAS,EAAEP;AAFb,GALoB,EASpB;AACEM,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,SAAS,EAAEpB;AAFb,GAToB,CAAH,GAYZ,EAZP;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,MAAM,CAACG,GAAP,CAAWC,KAAK,IACf,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAK,CAACH,IAAnB;AAAyB,IAAA,SAAS,EAAEG,KAAK,CAACF,SAA1C;AAAqD,IAAA,GAAG,EAAEE,KAAK,CAACH,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEL,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEV,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF,CADF;AAcH,CAlCD;;AAoCA,MAAMmB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,MAAM,EAAEO,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB;AADxB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLZ,IAAAA,eAAe,EAAE,MAAMY,QAAQ,CAAClB,cAAc,EAAf;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAeH,UAAU,CAACE,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\n\nimport Layout from './containers/Layout/Layout';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Checkout from './containers/Checkout/Checkout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authCheckState } from './store/actions';\n\n\nconst asyncCheckout = React.lazy(() => import('./containers/Checkout/Checkout'));\nconst asyncOrders = React.lazy(() => import('./containers/Orders/Orders'));\nconst asyncAuth = React.lazy(() => import('./containers/Auth/Auth'));\n\nconst App = ({onTryAutoSignUp, isAuth}) => {\n\n    useEffect(() => {\n      onTryAutoSignUp();\n    }, [onTryAutoSignUp]);\n\n    let routes = isAuth ? [\n      {\n        path: '/checkout',\n        component: asyncCheckout\n      },\n      {\n        path: '/orders',\n        component: asyncOrders\n      },\n      {\n        path: '/logout',\n        component: Logout\n      }] : [];\n\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            {routes.map(route => (\n              <Route path={route.path} component={route.component} key={route.path} />\n            ))}\n            <Route path='/auth' component={asyncAuth} />\n            <Route path='/' exact component={BurgerBuilder} />\n            <Redirect to='/' />\n          </Switch>\n        </Layout>\n      </div>\n    );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}