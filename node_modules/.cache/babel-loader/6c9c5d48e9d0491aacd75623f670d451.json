{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/the-burguer-builder/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = ({\n  elementType,\n  elementConfig,\n  value,\n  label\n}) => {\n  let inputElement = null;\n\n  switch (elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: classes.InputElement,\n        value: value\n      }, elementConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: classes.InputElement\n      }, elementConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        className: classes.InputElement,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, elementConfig.options.map(option => React.createElement(\"option\", {\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, opt)));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: classes.InputElement,\n        value: value\n      }, elementConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n  }\n\n  const labelElemtn = label ? React.createElement(\"label\", {\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, label) : null;\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, labelElemtn, inputElement);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/components/UI/Input/Input.js"],"names":["React","classes","Input","elementType","elementConfig","value","label","inputElement","InputElement","options","map","option","opt","labelElemtn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA;AAApC,CAAD,KAAgD;AAC1D,MAAIC,YAAY,GAAG,IAAnB;;AACA,UAAQJ,WAAR;AACI,SAAM,OAAN;AACII,MAAAA,YAAY,GAAG;AACK,QAAA,SAAS,EAAEN,OAAO,CAACO,YADxB;AAEK,QAAA,KAAK,EAAEH;AAFZ,SAGSD,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAIA;;AACJ,SAAM,UAAN;AACIG,MAAAA,YAAY,GAAG;AACK,QAAA,SAAS,EAAEN,OAAO,CAACO;AADxB,SAESJ,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAGA;;AACJ,SAAM,QAAN;AACIG,MAAAA,YAAY,GAAG;AACK,QAAA,SAAS,EAAEN,OAAO,CAACO,YADxB;AAEK,QAAA,KAAK,EAAEH,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGUD,aAAa,CAACK,OAAd,CAAsBC,GAAtB,CAA0BC,MAAM,IAC7B;AAAQ,QAAA,KAAK,EAAEA,MAAM,CAACN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BO,GAA9B,CADH,CAHV,CAAf;AAOA;;AACJ;AACIL,MAAAA,YAAY,GAAG;AACK,QAAA,SAAS,EAAEN,OAAO,CAACO,YADxB;AAEK,QAAA,KAAK,EAAEH;AAFZ,SAGSD,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAtBR;;AA4BA,QAAMS,WAAW,GAAGP,KAAK,GAAG;AAAO,IAAA,SAAS,EAAEL,OAAO,CAACK,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,KAAlC,CAAH,GAAsD,IAA/E;AACA,SACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKW,WADL,EAEKN,YAFL,CADJ;AAMH,CArCD;;AAuCA,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = ({elementType, elementConfig, value, label}) => {\n    let inputElement = null;\n    switch (elementType) {\n        case ('input'):\n            inputElement = <input\n                                className={classes.InputElement}\n                                value={value}\n                                {...elementConfig} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                                className={classes.InputElement}\n                                {...elementConfig} />\n            break;\n        case ('select'):\n            inputElement = <select\n                                className={classes.InputElement}\n                                value={value}>\n                                    {elementConfig.options.map(option => (\n                                        <option value={option.value}>{opt}</option>\n                                    ))}\n                            </select>\n            break;\n        default:\n            inputElement = <input \n                                className={classes.InputElement}\n                                value={value}\n                                {...elementConfig}  />\n    }\n\n    const labelElemtn = label ? <label className={classes.label}>{label}</label> : null;\n    return (\n        <div className={classes.Input}>\n            {labelElemtn}\n            {inputElement}\n        </div>\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}