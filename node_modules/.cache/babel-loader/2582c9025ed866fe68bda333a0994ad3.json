{"ast":null,"code":"import { PURCHASE_BURGER_SUCCESS, PURCHASE_BURGER_FAILED } from '../actions/actionTypes';\nimport axios from '../../../axios-orders';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: PURCHASE_BURGER_SUCCESS,\n    id: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFailed = error => {\n  return {\n    type: PURCHASE_BURGER_FAILED,\n    error: error\n  };\n};\nexport const purchaseOrderStart = orderData => {\n  return dispatch => {\n    axios.post('/orders.json', orderData).then(response => {}).catch(e => {\n      console.log(e);\n    }).finally(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/diogosilva/Desktop/the-burguer-builder/src/store/actions/order.js"],"names":["PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAILED","axios","purchaseBurgerSuccess","id","orderData","type","purchaseBurgerFailed","error","purchaseOrderStart","dispatch","post","then","response","catch","e","console","log","finally","setState","loading"],"mappings":"AAAA,SAASA,uBAAT,EAAkCC,sBAAlC,QAAgE,wBAAhE;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACpD,SAAO;AACHC,IAAAA,IAAI,EAAEN,uBADH;AAEHI,IAAAA,EAAE,EAAEA,EAFD;AAGHC,IAAAA,SAAS,EAAEA;AAHR,GAAP;AAKH,CANM;AAQP,OAAO,MAAME,oBAAoB,GAAIC,KAAD,IAAW;AAC3C,SAAO;AACHF,IAAAA,IAAI,EAAEL,sBADH;AAEHO,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,kBAAkB,GAAIJ,SAAD,IAAe;AAC7C,SAAOK,QAAQ,IAAI;AACfR,IAAAA,KAAK,CAACS,IAAN,CAAW,cAAX,EAA2BN,SAA3B,EACKO,IADL,CACUC,QAAQ,IAAI,CAEjB,CAHL,EAGOC,KAHP,CAGaC,CAAC,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KALL,EAKOG,OALP,CAKe,MAAM;AACb,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAPL;AAQH,GATD;AAUH,CAXM","sourcesContent":["import { PURCHASE_BURGER_SUCCESS, PURCHASE_BURGER_FAILED } from '../actions/actionTypes';\nimport axios from '../../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: PURCHASE_BURGER_SUCCESS,\n        id: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFailed = (error) => {\n    return {\n        type: PURCHASE_BURGER_FAILED,\n        error: error\n    };\n};\n\nexport const purchaseOrderStart = (orderData) => {\n    return dispatch => {\n        axios.post('/orders.json', orderData)\n            .then(response => {\n                \n            }).catch(e => {\n                console.log(e);\n            }).finally(() => {\n                this.setState({loading: false});\n            });\n    };\n};"]},"metadata":{},"sourceType":"module"}